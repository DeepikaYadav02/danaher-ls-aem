{"version":3,"names":["atomicLoadMoreResultsCss","AtomicLoadMoreResults","initialize","this","querySummary","buildQuerySummary","bindings","engine","resultList","buildResultList","options","fieldsToInclude","wrapHighlight","content","renderShowingResults","locale","i18n","language","t","interpolation","escapeValue","last","querySummaryState","lastResult","toLocaleString","total","h","class","part","innerHTML","renderProgressBar","percentage","width","Math","ceil","style","onClick","_a","store","state","focusOnNextNewResult","fetchMoreResults","renderLoadMoreResults","Button","text","render","isAppLoaded","hasResults","resultListState","moreResultsAvailable","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-load-more-results/atomic-load-more-results.pcss?tag=atomic-load-more-results&encapsulation=shadow","src/components/search/atomic-load-more-results/atomic-load-more-results.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n/**\n * @prop --atomic-more-results-progress-bar-color-from: Color of the start of the gradient for the load more results progress bar.\n * @prop --atomic-more-results-progress-bar-color-to: Color of the end of the gradient for the load more results progress bar.\n */\n.progress-bar {\n  --tw-gradient-from: var(--atomic-more-results-progress-bar-color-from, var(--atomic-primary-dark));\n  --tw-gradient-to: var(--atomic-more-results-progress-bar-color-to, var(--atomic-primary-light));\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\n","import {\n  QuerySummary,\n  QuerySummaryState,\n  buildQuerySummary,\n  ResultList,\n  ResultListState,\n  buildResultList,\n} from '@coveo/headless';\nimport {Component, h, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-load-more-results` component allows the user to load additional results if more are available.\n *\n * @part container - The container of the component.\n * @part showing-results - The summary displaying which results are shown and how many are available.\n * @part highlight - The highlighted number of results displayed and number of results available.\n * @part progress-bar - The progress bar displaying a percentage of results shown over the total number of results available.\n * @part load-more-results-button - The \"Load more results\" button.\n */\n@Component({\n  tag: 'atomic-load-more-results',\n  styleUrl: 'atomic-load-more-results.pcss',\n  shadow: true,\n})\nexport class AtomicLoadMoreResults {\n  @InitializeBindings() public bindings!: Bindings;\n  public querySummary!: QuerySummary;\n  public resultList!: ResultList;\n\n  @BindStateToController('querySummary')\n  @State()\n  private querySummaryState!: QuerySummaryState;\n  @BindStateToController('resultList')\n  @State()\n  private resultListState!: ResultListState;\n  @State() public error!: Error;\n\n  public initialize() {\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n    this.resultList = buildResultList(this.bindings.engine, {\n      options: {\n        fieldsToInclude: [],\n      },\n    });\n  }\n\n  private wrapHighlight(content: string) {\n    return `<span class=\"font-bold text-on-background\" part=\"highlight\">${content}</span>`;\n  }\n\n  private renderShowingResults() {\n    const locale = this.bindings.i18n.language;\n    const content = this.bindings.i18n.t('showing-results-of-load-more', {\n      interpolation: {escapeValue: false},\n      last: this.wrapHighlight(\n        this.querySummaryState.lastResult.toLocaleString(locale)\n      ),\n      total: this.wrapHighlight(\n        this.querySummaryState.total.toLocaleString(locale)\n      ),\n    });\n\n    return (\n      // deepcode ignore ReactSetInnerHtml: This is not React code.\n      <div\n        class=\"my-2 text-lg text-neutral-dark\"\n        part=\"showing-results\"\n        innerHTML={content}\n      ></div>\n    );\n  }\n\n  private renderProgressBar() {\n    const percentage =\n      (this.querySummaryState.lastResult / this.querySummaryState.total) * 100;\n    const width = `${Math.ceil(percentage)}%`;\n    return (\n      <div\n        part=\"progress-bar\"\n        class=\"relative w-72 h-1 my-2 rounded bg-neutral\"\n      >\n        <div\n          class=\"progress-bar absolute h-full left-0 top-0 z-1 overflow-hidden rounded bg-gradient-to-r\"\n          style={{width}}\n        ></div>\n      </div>\n    );\n  }\n\n  private async onClick() {\n    this.bindings.store.state.resultList?.focusOnNextNewResult();\n    this.resultList.fetchMoreResults();\n  }\n\n  private renderLoadMoreResults() {\n    return (\n      <Button\n        style=\"primary\"\n        text={this.bindings.i18n.t('load-more-results')}\n        part=\"load-more-results-button\"\n        class=\"font-bold my-2 p-3\"\n        onClick={() => this.onClick()}\n      ></Button>\n    );\n  }\n\n  public render() {\n    if (\n      !this.bindings.store.isAppLoaded() ||\n      !this.querySummaryState.hasResults\n    ) {\n      return;\n    }\n\n    return (\n      <div class=\"flex flex-col items-center\" part=\"container\">\n        {this.renderShowingResults()}\n        {this.renderProgressBar()}\n        {this.resultListState.moreResultsAvailable &&\n          this.renderLoadMoreResults()}\n      </div>\n    );\n  }\n}\n"],"mappings":"wRAAA,MAAMA,EAA2B,omhC,iXC8BpBC,EAAqB,M,8GAazB,UAAAC,GACLC,KAAKC,aAAeC,EAAkBF,KAAKG,SAASC,QACpDJ,KAAKK,WAAaC,EAAgBN,KAAKG,SAASC,OAAQ,CACtDG,QAAS,CACPC,gBAAiB,K,CAKf,aAAAC,CAAcC,GACpB,MAAO,+DAA+DA,U,CAGhE,oBAAAC,GACN,MAAMC,EAASZ,KAAKG,SAASU,KAAKC,SAClC,MAAMJ,EAAUV,KAAKG,SAASU,KAAKE,EAAE,+BAAgC,CACnEC,cAAe,CAACC,YAAa,OAC7BC,KAAMlB,KAAKS,cACTT,KAAKmB,kBAAkBC,WAAWC,eAAeT,IAEnDU,MAAOtB,KAAKS,cACVT,KAAKmB,kBAAkBG,MAAMD,eAAeT,MAIhD,OAEEW,EAAA,OACEC,MAAM,iCACNC,KAAK,kBACLC,UAAWhB,G,CAKT,iBAAAiB,GACN,MAAMC,EACH5B,KAAKmB,kBAAkBC,WAAapB,KAAKmB,kBAAkBG,MAAS,IACvE,MAAMO,EAAQ,GAAGC,KAAKC,KAAKH,MAC3B,OACEL,EAAA,OACEE,KAAK,eACLD,MAAM,6CAEND,EAAA,OACEC,MAAM,yFACNQ,MAAO,CAACH,W,CAMR,aAAMI,G,OACZC,EAAAlC,KAAKG,SAASgC,MAAMC,MAAM/B,cAAU,MAAA6B,SAAA,SAAAA,EAAEG,uBACtCrC,KAAKK,WAAWiC,kB,CAGV,qBAAAC,GACN,OACEhB,EAACiB,EAAM,CACLR,MAAM,UACNS,KAAMzC,KAAKG,SAASU,KAAKE,EAAE,qBAC3BU,KAAK,2BACLD,MAAM,qBACNS,QAAS,IAAMjC,KAAKiC,W,CAKnB,MAAAS,GACL,IACG1C,KAAKG,SAASgC,MAAMQ,gBACpB3C,KAAKmB,kBAAkByB,WACxB,CACA,M,CAGF,OACErB,EAAA,OAAKC,MAAM,6BAA6BC,KAAK,aAC1CzB,KAAKW,uBACLX,KAAK2B,oBACL3B,KAAK6C,gBAAgBC,sBACpB9C,KAAKuC,wB,GA9FgBQ,EAAA,CAA5BC,K,+BAMOD,EAAA,CAFPE,EAAsB,iB,wCAKfF,EAAA,CAFPE,EAAsB,e"}