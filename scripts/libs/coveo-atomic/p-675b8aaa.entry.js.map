{"version":3,"names":["SEPARATOR","ELLIPSIS","PATH_MAX_LENGTH","CategoryFacetSearchResult","result","field","i18n","onClick","searchQuery","count","toLocaleString","language","inLabel","t","allCategories","localizedPath","path","length","map","value","getFieldValueCaption","ariaLabel","child","numberOfResults","displayValue","parent","join","ellipsedPath","firstPart","slice","lastParts","concat","renderPath","h","class","index","key","Button","style","part","FacetValueLabelHighlight","isSelected","text","atomicCategoryFacetCss","AtomicCategoryFacet","this","resultIndexToFocusOnShowMore","label","numberOfValues","withSearch","sortCriteria","delimitingCharacter","basePath","filterByBasePath","isCollapsed","headingLevel","filterFacetCount","injectionDepth","dependsOn","validateProps","validateDependsOn","initialize","searchStatus","buildSearchStatus","bindings","engine","options","facetId","facetSearch","facet","buildCategoryFacet","announceFacetSearchResultsWithAriaLive","msg","facetSearchAriaMessage","state","facetInfo","element","host","isHidden","store","registerFacet","initializePopover","hasValues","values","numberOfSelectedValues","facetState","hasActiveValues","initializeDependenciesManager","focusTargets","showLessFocus","FocusTargetController","showMoreFocus","headerFocus","activeValueFocus","disconnectedCallback","isConnected","_a","dependenciesManager","stopWatching","searchStatusState","hasError","enabled","parents","componentShouldUpdate","next","prev","propName","shouldUpdateFacetSearchComponent","hasParents","buildFacetConditionsManager","conditions","parseDependsOn","renderHeader","FacetHeader","onToggleCollapse","onClearFilters","focusAfterSearch","deselectAll","headerRef","header","setTarget","renderSearchInput","FacetSearchInput","query","onChange","clear","updateCaptions","getFieldCaptions","updateText","search","onClear","renderAllCategoriesButton","icon","LeftArrow","renderParentButton","facetValue","ariaPressed","toggleSelect","renderValuesTree","isRoot","renderChildren","activeParent","activeParentDisplayValue","FacetValueLink","getIsLeafOrNodePart","buttonRef","subList","renderChild","isShowLessFocusTarget","isShowMoreFocusTarget","additionalPart","i","isLeafValue","renderSearchResults","select","renderMatches","FacetSearchMatches","numberOfMatches","hasMoreMatches","moreValuesAvailable","renderShowMoreLess","FacetShowMoreLess","onShowMore","showMoreValues","onShowLess","showLessValues","canShowLessValues","canShowMoreValues","render","Hidden","firstSearchExecuted","FacetPlaceholder","FacetContainer","shouldDisplaySearchResults","Fragment","FacetValuesGroup","__decorate","InitializeBindings","BindStateToController","ArrayProp","MapProp","AriaLiveRegion"],"sources":["src/components/search/facets/category-facet-search-result/category-facet-search-result.tsx","src/components/search/facets/atomic-category-facet/atomic-category-facet.pcss?tag=atomic-category-facet&encapsulation=shadow","src/components/search/facets/atomic-category-facet/atomic-category-facet.tsx"],"sourcesContent":["import {CategoryFacetSearchResult as HeadlessCategoryFacetSearchResult} from '@coveo/headless';\nimport {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\nimport {Button} from '../../../common/button';\nimport {FacetValueLabelHighlight} from '../../../common/facets/facet-value-label-highlight/facet-value-label-highlight';\n\ninterface CategoryFacetSearchResultProps {\n  result: HeadlessCategoryFacetSearchResult;\n  i18n: i18n;\n  field: string;\n  onClick(): void;\n  searchQuery: string;\n}\n\nconst SEPARATOR = '/';\nconst ELLIPSIS = '...';\nconst PATH_MAX_LENGTH = 3;\n\nexport const CategoryFacetSearchResult: FunctionalComponent<\n  CategoryFacetSearchResultProps\n> = ({result, field, i18n, onClick, searchQuery}) => {\n  const count = result.count.toLocaleString(i18n.language);\n  const inLabel = i18n.t('in');\n  const allCategories = i18n.t('all-categories');\n  const localizedPath = result.path.length\n    ? result.path.map((value) => getFieldValueCaption(field, value, i18n))\n    : [allCategories];\n  const ariaLabel = i18n.t('under', {\n    child: i18n.t('facet-value', {\n      numberOfResults: result.count,\n      value: result.displayValue,\n    }),\n    parent: localizedPath.join(', '),\n  });\n\n  function ellipsedPath(path: string[]) {\n    if (path.length <= PATH_MAX_LENGTH) {\n      return path;\n    }\n    const firstPart = path.slice(0, 1);\n    const lastParts = path.slice(-PATH_MAX_LENGTH + 1);\n    return firstPart.concat(ELLIPSIS, ...lastParts);\n  }\n\n  function renderPath(path: string[]) {\n    if (!path.length) {\n      return <span class=\"truncate\">{`${inLabel} ${allCategories}`}</span>;\n    }\n\n    return [\n      <span class=\"mr-0.5\">{inLabel}</span>,\n      ellipsedPath(path).map((value, index) => [\n        index > 0 && <span class=\"mx-0.5\">{SEPARATOR}</span>,\n        <span class={value === ELLIPSIS ? '' : 'truncate flex-1 max-w-max'}>\n          {value}\n        </span>,\n      ]),\n    ];\n  }\n\n  return (\n    <li key={result.displayValue}>\n      <Button\n        style=\"text-neutral\"\n        part=\"search-result\"\n        onClick={() => onClick()}\n        class=\"w-full flex flex-col px-2 py-2.5 truncate group no-outline\"\n        aria-label={ariaLabel}\n      >\n        <div class=\"w-full flex\">\n          <FacetValueLabelHighlight\n            displayValue={result.displayValue}\n            isSelected={false}\n            searchQuery={searchQuery}\n          ></FacetValueLabelHighlight>\n          <span part=\"value-count\" class=\"value-count\">\n            {i18n.t('between-parentheses', {\n              text: count,\n            })}\n          </span>\n        </div>\n        <div\n          part=\"search-result-path\"\n          class=\"flex w-full text-neutral-dark mt-1 group-focus:text-primary group-hover:text-primary\"\n        >\n          {renderPath(localizedPath)}\n        </div>\n      </Button>\n    </li>\n  );\n};\n","@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/facets/facet-search/facet-search.pcss';\n\n[part~='active-parent'] {\n  @apply pl-9;\n}\n\n[part~='parents'] [part~='values'] {\n  @apply pl-9;\n}\n\n[part~='all-categories-button'],\n[part~='parent-button'] {\n  @apply w-full py-2.5 pr-2 pl-7 text-left relative flex items-center;\n}\n\n[part~='back-arrow'] {\n  @apply h-5 w-5 absolute left-1;\n}\n","import {\n  CategoryFacet,\n  buildCategoryFacet,\n  CategoryFacetState,\n  CategoryFacetOptions,\n  CategoryFacetSortCriterion,\n  SearchStatus,\n  SearchStatusState,\n  buildSearchStatus,\n  CategoryFacetValue,\n  buildFacetConditionsManager,\n  FacetConditionsManager,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, Element, Fragment} from '@stencil/core';\nimport LeftArrow from '../../../../images/arrow-left-rounded.svg';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../../utils/accessibility-utils';\nimport {\n  getFieldCaptions,\n  getFieldValueCaption,\n} from '../../../../utils/field-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {ArrayProp, MapProp} from '../../../../utils/props-utils';\nimport {Button} from '../../../common/button';\nimport {\n  parseDependsOn,\n  validateDependsOn,\n} from '../../../common/facets/facet-common';\nimport {BaseFacet} from '../../../common/facets/facet-common';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\nimport {\n  shouldUpdateFacetSearchComponent,\n  shouldDisplaySearchResults,\n} from '../../../common/facets/facet-search/facet-search-utils';\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\nimport {FacetValueLabelHighlight} from '../../../common/facets/facet-value-label-highlight/facet-value-label-highlight';\nimport {FacetValueLink} from '../../../common/facets/facet-value-link/facet-value-link';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {Hidden} from '../../../common/hidden';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\nimport {initializePopover} from '../atomic-popover/popover-type';\nimport {CategoryFacetSearchResult} from '../category-facet-search-result/category-facet-search-result';\n\n/**\n * A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\n * An `atomic-category-facet` displays a facet of values in a browsable, hierarchical fashion.\n *\n * @part facet - The wrapper for the entire facet.\n * @part placeholder - The placeholder shown before the first search is executed.\n *\n * @part label-button - The button that displays the label and allows to expand/collapse the facet.\n * @part label-button-icon - The label button icon.\n *\n * @part search-wrapper - The search box wrapper.\n * @part search-input - The search box input.\n * @part search-icon - The search box submit button.\n * @part search-clear-button - The button to clear the search box of input.\n * @part more-matches - The label indicating there are more matches for the current facet search query.\n * @part no-matches - The label indicating there are no matches for the current facet search query.\n * @part matches-query - The highlighted query inside the matches labels.\n * @part search-results - The search results container.\n * @part search-result - The search result value.\n * @part search-result-path - The search result path.\n * @part search-highlight - The highlighted query inside the facet values.\n *\n * @part parents - The container surrounding the whole hierarchy of values.\n * @part sub-parents - The container surrounding a sub-hierarchy of values.\n * @part values - The container surrounding either the children of the active value or the values at the base.\n * @part all-categories-button - The \"View all\" button displayed first within the parents.\n * @part parent-button - The clickable parent button displayed first within sub-parents.\n * @part active-parent - The clickable active parent displayed first within the last sub-parents.\n * @part value-link - The clickable value displayed first within values.\n * @part back-arrow - The back arrow displayed before the clickable parents.\n * @part value-label - The facet value label within a value button.\n * @part value-count - The facet value count within a value button.\n * @part leaf-value - A facet value with no child value.\n * @part node-value - A facet value with child values.\n *\n * @part show-more - The show more results button.\n * @part show-less - The show less results button.\n * @part show-more-less-icon - The icons of the show more & show less buttons.\n */\n@Component({\n  tag: 'atomic-category-facet',\n  styleUrl: 'atomic-category-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCategoryFacet\n  implements InitializableComponent, BaseFacet<CategoryFacet>\n{\n  @InitializeBindings() public bindings!: Bindings;\n  public facet!: CategoryFacet;\n  private dependenciesManager?: FacetConditionsManager;\n  private resultIndexToFocusOnShowMore = 0;\n  public searchStatus!: SearchStatus;\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: CategoryFacetState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n\n  /**\n   * Specifies a unique identifier for the facet.\n   */\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\n  /**\n   * The non-localized label for the facet.\n   * Used in the `atomic-breadbox` component through the bindings store.\n   */\n  @Prop({reflect: true}) public label = 'no-label';\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  @Prop({reflect: true}) public field!: string;\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time more values are shown.\n   */\n  @Prop({reflect: true}) public numberOfValues = 8;\n  /**\n   * Whether this facet should contain a search box.\n   * When \"true\", the search is only enabled when more facet values are available.\n   */\n  @Prop({reflect: true}) public withSearch = false;\n  /**\n   * The sort criterion to apply to the returned facet values.\n   * Possible values are 'alphanumeric' and 'occurrences'.\n   */\n  // TODO: add automatic (occurrences when not expanded, alphanumeric when expanded)\n  @Prop({reflect: true}) public sortCriteria: CategoryFacetSortCriterion =\n    'occurrences';\n  /**\n   * The character that separates values of a multi-value field.\n   *\n   * *Note:* If you use the [example formatting](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-category-facet/#usage-notes) for the associated multi-value field, you must set this value to `|` or the facet won't display properly.\n   */\n  @Prop({reflect: true}) public delimitingCharacter = ';';\n  /**\n   * The base path shared by all values for the facet.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   *  <atomic-category-facet base-path='[\"first value\", \"second value\"]' ></atomic-category-facet>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({reflect: true, mutable: true})\n  public basePath: string[] | string = '[]';\n\n  /**\n   * Whether to use basePath as a filter for the results.\n   */\n  @Prop({reflect: true}) public filterByBasePath = true;\n  /**\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\n   */\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   */\n  @Prop({reflect: true}) public filterFacetCount = true;\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   * Minimum: `0`\n   * Default: `1000`\n   */\n  @Prop({reflect: true}) public injectionDepth = 1000;\n  // @Prop() public customSort?: string; TODO: KIT-753 Add customSort option for facet\n\n  /**\n   * The required facets and values for this facet to be displayed.\n   * Examples:\n   * ```html\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n   *\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n   * <atomic-category-facet\n   *   depends-on-abc\n   *   ...\n   * ></atomic-category-facet>\n   *\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n   * <atomic-category-facet\n   *   depends-on-abc=\"doc\"\n   *   ...\n   * ></atomic-category-facet>\n   * ```\n   */\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\n\n  private showLessFocus?: FocusTargetController;\n\n  private showMoreFocus?: FocusTargetController;\n\n  private headerFocus?: FocusTargetController;\n\n  private activeValueFocus?: FocusTargetController;\n\n  @AriaLiveRegion('facet-search')\n  protected facetSearchAriaMessage!: string;\n\n  private validateProps() {\n    validateDependsOn(this.dependsOn);\n  }\n\n  public initialize() {\n    this.validateProps();\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    const options: CategoryFacetOptions = {\n      facetId: this.facetId,\n      field: this.field,\n      numberOfValues: this.numberOfValues,\n      sortCriteria: this.sortCriteria,\n      facetSearch: {numberOfValues: this.numberOfValues},\n      basePath: [...this.basePath],\n      delimitingCharacter: this.delimitingCharacter,\n      filterByBasePath: this.filterByBasePath,\n      injectionDepth: this.injectionDepth,\n      filterFacetCount: this.filterFacetCount,\n    };\n    this.facet = buildCategoryFacet(this.bindings.engine, {options});\n    announceFacetSearchResultsWithAriaLive(\n      this.facet,\n      this.label,\n      (msg) => (this.facetSearchAriaMessage = msg),\n      this.bindings.i18n\n    );\n    this.facetId = this.facet.state.facetId;\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.label),\n      facetId: this.facetId!,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n    this.bindings.store.registerFacet('categoryFacets', facetInfo);\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => !!this.facet.state.values.length,\n      numberOfSelectedValues: () => (this.facetState.hasActiveValues ? 1 : 0),\n    });\n    this.initializeDependenciesManager();\n  }\n\n  private get focusTargets() {\n    if (!this.showLessFocus) {\n      this.showLessFocus = new FocusTargetController(this);\n    }\n    if (!this.showMoreFocus) {\n      this.showMoreFocus = new FocusTargetController(this);\n    }\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n    if (!this.activeValueFocus) {\n      this.activeValueFocus = new FocusTargetController(this);\n    }\n\n    return {\n      showLessFocus: this.showLessFocus,\n      showMoreFocus: this.showMoreFocus,\n      headerFocus: this.headerFocus,\n      activeValueFocus: this.activeValueFocus,\n    };\n  }\n\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n    this.dependenciesManager?.stopWatching();\n  }\n\n  private get isHidden() {\n    return (\n      this.searchStatusState.hasError ||\n      !this.facet.state.enabled ||\n      (!this.facet.state.values.length && !this.facet.state.parents.length)\n    );\n  }\n\n  public componentShouldUpdate(\n    next: unknown,\n    prev: unknown,\n    propName: keyof AtomicCategoryFacet\n  ) {\n    if (propName === 'facetState' && prev && this.withSearch) {\n      return shouldUpdateFacetSearchComponent(\n        (next as CategoryFacetState).facetSearch,\n        (prev as CategoryFacetState).facetSearch\n      );\n    }\n\n    return true;\n  }\n\n  private get hasParents() {\n    return !!this.facetState.parents.length;\n  }\n\n  private initializeDependenciesManager() {\n    this.dependenciesManager = buildFacetConditionsManager(\n      this.bindings.engine,\n      {\n        facetId: this.facetId!,\n        conditions: parseDependsOn(this.dependsOn),\n      }\n    );\n  }\n\n  private renderHeader() {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.label}\n        numberOfSelectedValues={\n          this.facetState.hasActiveValues && this.isCollapsed ? 1 : 0\n        }\n        isCollapsed={this.isCollapsed}\n        headingLevel={this.headingLevel}\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n        onClearFilters={() => {\n          this.focusTargets.headerFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        headerRef={(header) => {\n          this.focusTargets.headerFocus.setTarget(header);\n          if (!this.hasParents) {\n            this.focusTargets.activeValueFocus.setTarget(header);\n          }\n        }}\n      ></FacetHeader>\n    );\n  }\n\n  private renderSearchInput() {\n    if (!this.withSearch) {\n      return;\n    }\n\n    return (\n      <FacetSearchInput\n        i18n={this.bindings.i18n}\n        label={this.label}\n        query={this.facetState.facetSearch.query}\n        onChange={(value) => {\n          if (value === '') {\n            this.facet.facetSearch.clear();\n            return;\n          }\n          this.facet.facetSearch.updateCaptions(\n            getFieldCaptions(this.field, this.bindings.i18n)\n          );\n          this.facet.facetSearch.updateText(value);\n          this.facet.facetSearch.search();\n        }}\n        onClear={() => this.facet.facetSearch.clear()}\n      ></FacetSearchInput>\n    );\n  }\n\n  private renderAllCategoriesButton() {\n    const allCategories = this.bindings.i18n.t('all-categories');\n    return (\n      <Button\n        style=\"text-neutral\"\n        part=\"all-categories-button\"\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n      >\n        <atomic-icon\n          aria-hidden=\"true\"\n          icon={LeftArrow}\n          part=\"back-arrow\"\n        ></atomic-icon>\n        <span class=\"truncate\">{allCategories}</span>\n      </Button>\n    );\n  }\n\n  private renderParentButton(facetValue: CategoryFacetValue) {\n    const displayValue = getFieldValueCaption(\n      this.field,\n      facetValue.value,\n      this.bindings.i18n\n    );\n    const ariaLabel = this.bindings.i18n.t('facet-value', {\n      value: displayValue,\n      count: facetValue.numberOfResults,\n    });\n\n    return (\n      <Button\n        style=\"text-neutral\"\n        part=\"parent-button\"\n        ariaPressed=\"false\"\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.toggleSelect(facetValue);\n        }}\n        ariaLabel={ariaLabel}\n      >\n        <atomic-icon\n          icon={LeftArrow}\n          part=\"back-arrow\"\n          class=\"back-arrow\"\n        ></atomic-icon>\n        <span class=\"truncate\">{displayValue}</span>\n      </Button>\n    );\n  }\n\n  private renderValuesTree(parents: CategoryFacetValue[], isRoot: boolean) {\n    if (!this.hasParents) {\n      return this.renderChildren();\n    }\n\n    if (isRoot) {\n      return (\n        <li class=\"contents\">\n          {this.renderAllCategoriesButton()}\n          <ul part=\"sub-parents\">{this.renderValuesTree(parents, false)}</ul>\n        </li>\n      );\n    }\n\n    if (parents.length > 1) {\n      return (\n        <li class=\"contents\">\n          {this.renderParentButton(parents[0])}\n          <ul part=\"sub-parents\">\n            {this.renderValuesTree(parents.slice(1), false)}\n          </ul>\n        </li>\n      );\n    }\n\n    const activeParent = parents[0];\n    const activeParentDisplayValue = getFieldValueCaption(\n      this.field,\n      activeParent.value,\n      this.bindings.i18n\n    );\n\n    return (\n      <FacetValueLink\n        displayValue={activeParentDisplayValue}\n        numberOfResults={activeParent.numberOfResults}\n        isSelected={true}\n        i18n={this.bindings.i18n}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        part={`active-parent ${this.getIsLeafOrNodePart(activeParent)}`}\n        class=\"contents\"\n        buttonRef={this.focusTargets.activeValueFocus.setTarget}\n        subList={<ul part=\"values\">{this.renderChildren()}</ul>}\n      >\n        <FacetValueLabelHighlight\n          displayValue={activeParentDisplayValue}\n          isSelected={true}\n        ></FacetValueLabelHighlight>\n      </FacetValueLink>\n    );\n  }\n\n  private renderChild(\n    facetValue: CategoryFacetValue,\n    isShowLessFocusTarget: boolean,\n    isShowMoreFocusTarget: boolean\n  ) {\n    const displayValue = getFieldValueCaption(\n      this.field,\n      facetValue.value,\n      this.bindings.i18n\n    );\n    const isSelected = facetValue.state === 'selected';\n    return (\n      <FacetValueLink\n        displayValue={displayValue}\n        numberOfResults={facetValue.numberOfResults}\n        isSelected={isSelected}\n        i18n={this.bindings.i18n}\n        onClick={() => {\n          this.focusTargets.activeValueFocus.focusAfterSearch();\n          this.facet.toggleSelect(facetValue);\n        }}\n        searchQuery={this.facetState.facetSearch.query}\n        buttonRef={(element) => {\n          isShowLessFocusTarget &&\n            this.focusTargets.showLessFocus.setTarget(element);\n          isShowMoreFocusTarget &&\n            this.focusTargets.showMoreFocus.setTarget(element);\n        }}\n        additionalPart={this.getIsLeafOrNodePart(facetValue)}\n      >\n        <FacetValueLabelHighlight\n          displayValue={displayValue}\n          isSelected={isSelected}\n        ></FacetValueLabelHighlight>\n      </FacetValueLink>\n    );\n  }\n\n  private renderChildren() {\n    if (!this.facetState.values.length) {\n      return;\n    }\n\n    return this.facetState.values.map((value, i) =>\n      this.renderChild(value, i === 0, i === this.resultIndexToFocusOnShowMore)\n    );\n  }\n\n  private getIsLeafOrNodePart(value: CategoryFacetValue) {\n    return value.isLeafValue ? 'leaf-value' : 'node-value';\n  }\n\n  private renderSearchResults() {\n    return (\n      <ul part=\"search-results\" class=\"mt-3\">\n        {this.facetState.facetSearch.values.map((value) => (\n          <CategoryFacetSearchResult\n            result={value}\n            field={this.field}\n            i18n={this.bindings.i18n}\n            searchQuery={this.facetState.facetSearch.query}\n            onClick={() => {\n              this.focusTargets.activeValueFocus.focusAfterSearch();\n              this.facet.facetSearch.select(value);\n            }}\n          ></CategoryFacetSearchResult>\n        ))}\n      </ul>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facetState.facetSearch.query}\n        numberOfMatches={this.facetState.facetSearch.values.length}\n        hasMoreMatches={this.facetState.facetSearch.moreValuesAvailable}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private renderShowMoreLess() {\n    return (\n      <div class={this.hasParents ? 'pl-9' : ''}>\n        <FacetShowMoreLess\n          label={this.label}\n          i18n={this.bindings.i18n}\n          onShowMore={() => {\n            this.resultIndexToFocusOnShowMore = this.facetState.values.length;\n            this.focusTargets.showMoreFocus.focusAfterSearch();\n            this.facet.showMoreValues();\n          }}\n          onShowLess={() => {\n            this.focusTargets.showLessFocus.focusAfterSearch();\n            this.facet.showLessValues();\n          }}\n          canShowLessValues={this.facetState.canShowLessValues}\n          canShowMoreValues={this.facetState.canShowMoreValues}\n        ></FacetShowMoreLess>\n      </div>\n    );\n  }\n\n  public render() {\n    if (this.searchStatusState.hasError || !this.facet.state.enabled) {\n      return <Hidden></Hidden>;\n    }\n\n    if (!this.searchStatusState.firstSearchExecuted) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={this.numberOfValues}\n          isCollapsed={this.isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n\n    if (!this.facetState.values.length && !this.facetState.parents.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <FacetContainer>\n        {this.renderHeader()}\n        {!this.isCollapsed && [\n          this.renderSearchInput(),\n          shouldDisplaySearchResults(this.facetState.facetSearch) ? (\n            <Fragment>\n              {this.facetState.facetSearch.values.length ? (\n                <FacetValuesGroup\n                  i18n={this.bindings.i18n}\n                  label={this.label}\n                  query={this.facetState.facetSearch.query}\n                >\n                  {this.renderSearchResults()}\n                </FacetValuesGroup>\n              ) : (\n                <div class=\"mt-3\"></div>\n              )}\n              {this.renderMatches()}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <FacetValuesGroup i18n={this.bindings.i18n} label={this.label}>\n                {this.hasParents ? (\n                  <ul part=\"parents\" class=\"mt-3\">\n                    {this.renderValuesTree(this.facetState.parents, true)}\n                  </ul>\n                ) : (\n                  <ul part=\"values\" class=\"mt-3\">\n                    {this.renderChildren()}\n                  </ul>\n                )}\n              </FacetValuesGroup>\n              {this.renderShowMoreLess()}\n            </Fragment>\n          ),\n        ]}\n      </FacetContainer>\n    );\n  }\n}\n"],"mappings":"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"}