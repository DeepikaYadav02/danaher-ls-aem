{"version":3,"names":["atomicResultPlaceholderCss","placeholderClasses","AtomicResultPlaceholder","renderExcerptLine","width","h","style","height","class","render","getResultDisplayClasses","this","display","density","imageSize","join","trim","Array","from","length","AtomicResultSectionActions","componentDidRender","hideEmptySection","host","AtomicResultSectionBadges","AtomicResultSectionBottomMetadata","AtomicResultSectionExcerpt","AtomicResultSectionTitle","AtomicResultSectionVisual","atomicResultTablePlaceholderCss","AtomicResultTablePlaceholder","getClasses","rows","AtomicText","strings","value","bindings","i18n","t","count","connectedCallback","error","Error","__decorate","InitializeBindings"],"sources":["src/components/common/atomic-result-placeholder/atomic-result-placeholder.pcss?tag=atomic-result-placeholder&encapsulation=shadow","src/components/common/atomic-result-placeholder/atomic-result-placeholder.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-actions.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-badges.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-bottom-metadata.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-excerpt.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-visual.tsx","src/components/search/atomic-result-table-placeholder/atomic-result-table-placeholder.pcss?tag=atomic-result-table-placeholder&encapsulation=shadow","src/components/search/atomic-result-table-placeholder/atomic-result-table-placeholder.tsx","src/components/search/atomic-text/atomic-text.tsx"],"sourcesContent":["@import '../result/result.pcss';\n\n.result-root {\n  &.display-grid {\n    atomic-result-section-actions {\n      display: none;\n    }\n  }\n\n  .badge {\n    width: 14rem;\n  }\n\n  .action {\n    width: 10rem;\n  }\n\n  .title {\n    display: grid;\n    grid-auto-flow: column;\n    grid-gap: 0.5rem;\n    height: var(--line-height);\n    width: 30rem;\n    max-width: 100%;\n  }\n\n  .fields-placeholder {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, min(11rem, 40%));\n    grid-column-gap: 0.5rem;\n\n    .field-value-placeholder {\n      height: var(--font-size);\n      margin: calc((var(--line-height) - var(--font-size)) / 2) 0;\n    }\n  }\n}\n","import {Component, h, Prop} from '@stencil/core';\nimport {\n  ResultDisplayLayout,\n  ResultDisplayDensity,\n  ResultDisplayImageSize,\n  getResultDisplayClasses,\n} from '../../common/layout/display-options';\n\nconst placeholderClasses = 'block bg-neutral w-full h-full rounded';\n\n/**\n * The `atomic-result-placeholder` component provides an intermediate visual state that is rendered before the first results are available.\n * @internal\n */\n@Component({\n  tag: 'atomic-result-placeholder',\n  styleUrl: 'atomic-result-placeholder.pcss',\n  shadow: true,\n})\nexport class AtomicResultPlaceholder {\n  @Prop() display!: ResultDisplayLayout;\n  @Prop() density!: ResultDisplayDensity;\n  @Prop() imageSize?: ResultDisplayImageSize;\n\n  private renderExcerptLine(width: string) {\n    return (\n      <div\n        style={{\n          height: 'var(--line-height)',\n          width,\n        }}\n      >\n        <div\n          class={placeholderClasses}\n          style={{height: 'var(--font-size)'}}\n        ></div>\n      </div>\n    );\n  }\n\n  public render() {\n    return (\n      <div\n        class={`result-root placeholder with-sections animate-pulse ${getResultDisplayClasses(\n          this.display,\n          this.density,\n          this.imageSize!\n        )\n          .join(' ')\n          .trim()}`}\n      >\n        <atomic-result-section-visual>\n          <div class={placeholderClasses}></div>\n        </atomic-result-section-visual>\n        <atomic-result-section-badges>\n          <div class={`badge ${placeholderClasses}`}></div>\n        </atomic-result-section-badges>\n        <atomic-result-section-actions>\n          <div class={`action ${placeholderClasses}`}></div>\n        </atomic-result-section-actions>\n        <atomic-result-section-title>\n          <div class={`title ${placeholderClasses}`}></div>\n        </atomic-result-section-title>\n        <atomic-result-section-excerpt>\n          {this.renderExcerptLine('100%')}\n          {this.renderExcerptLine('95%')}\n          {this.renderExcerptLine('98%')}\n        </atomic-result-section-excerpt>\n        <atomic-result-section-bottom-metadata>\n          <div class=\"fields-placeholder\">\n            {Array.from({length: 4}, () => (\n              <div\n                class={`field-value-placeholder ${placeholderClasses}`}\n              ></div>\n            ))}\n          </div>\n        </atomic-result-section-bottom-metadata>\n      </div>\n    );\n  }\n}\n","import {Element, Component} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\n\n/**\n * This section allows the information seeker to perform an action on an item without having to view its details.\n * For example, in Commerce you can add an item to the cart directly or add it to a wish list to view at a later time.\n *\n * Behavior:\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n * ** You should ensure that elements inside of it have `height: var(--line-height)`.\n * * Is a wrapping flexbox with a gap.\n * * May appear over, next to, or beneath the visual section.\n */\n@Component({\n  tag: 'atomic-result-section-actions',\n  shadow: false,\n})\nexport class AtomicResultSectionActions {\n  @Element() private host!: HTMLElement;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","import {Element, Component} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\n\n/**\n * This section provides badges that highlight special features of the item.\n *\n * Behavior:\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n * ** You should ensure that elements inside of it have `height: var(--line-height)`.\n * * Is a wrapping flexbox with a gap.\n * * May appear over, next to, or beneath the visual section.\n */\n@Component({\n  tag: 'atomic-result-section-badges',\n  shadow: false,\n})\nexport class AtomicResultSectionBadges {\n  @Element() private host!: HTMLElement;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","import {Element, Component} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\n\n/**\n * This section displays additional descriptive information about the item.\n *\n * Behavior:\n * * Has a maximum height of two lines.\n * ** We recommend that you use `atomic-result-fields-list` to ensure that the fields in this section donâ€™t overflow.\n * * Exposes the `--line-height` variable so child elements can adjust to the current line height.\n * * Has a defined CSS `color` property for text.\n * * Has a font weight.\n */\n@Component({\n  tag: 'atomic-result-section-bottom-metadata',\n  shadow: false,\n})\nexport class AtomicResultSectionBottomMetadata {\n  @Element() private host!: HTMLElement;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","import {Element, Component} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\n\n/**\n * This section contains an informative summary of the item's content.\n *\n * Behavior:\n * * Has a fixed height of one to three lines, depending on the layout and density.\n * * Ellipses overflowing text.\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n * * Has a defined CSS `color` property for text.\n */\n@Component({\n  tag: 'atomic-result-section-excerpt',\n  shadow: false,\n})\nexport class AtomicResultSectionExcerpt {\n  @Element() private host!: HTMLElement;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","import {Element, Component} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\n\n/**\n * This section identifies the item by its name, and its main use is to make the result list scannable.\n * This is usually the page title.\n *\n * Behavior:\n * * Has a fixed height of two lines on grid layouts.\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n * * Has a defined CSS `color` property for text.\n */\n@Component({\n  tag: 'atomic-result-section-title',\n  shadow: false,\n})\nexport class AtomicResultSectionTitle {\n  @Element() private host!: HTMLElement;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","import {Element, Component, Prop} from '@stencil/core';\nimport {hideEmptySection} from '../../../../utils/result-section-utils';\nimport {ResultDisplayImageSize} from '../../../common/layout/display-options';\n\n/**\n * This section provides visual information about the item.\n * For example, in Commerce, an image is a great shorthand for a product category.\n * An icon can quickly show the item type, or an avatar can help identify to whom it is related.\n *\n * Behavior:\n * * Has a fixed size that depends on the specified image size, the layout, the density, and the screen size.\n * ** When the image size is set to `icon`, this section stays very small.\n * ** You should ensure that elements inside of it take the available space.\n * * Always has a 1:1 aspect ratio.\n */\n@Component({\n  tag: 'atomic-result-section-visual',\n  shadow: false,\n})\nexport class AtomicResultSectionVisual {\n  @Element() private host!: HTMLElement;\n\n  /**\n   * How large or small the visual section of results using this template should be.\n   */\n  @Prop({reflect: true}) public imageSize?: ResultDisplayImageSize;\n\n  public componentDidRender() {\n    hideEmptySection(this.host);\n  }\n}\n","@import '../../../global/global.pcss';\n@import '../../common/result-list/styles/mixins.pcss';\n\n:host {\n  display: grid;\n}\n\n.list-root.display-table {\n  @mixin atomic-result-table;\n  border: 1px solid var(--atomic-neutral);\n  border-radius: var(--atomic-border-radius-xl);\n\n  thead tr,\n  tbody tr:not(:last-child) {\n    position: relative;\n\n    &::after {\n      content: ' ';\n      display: block;\n      position: absolute;\n      height: 1px;\n      bottom: 0;\n      left: var(--padding);\n      right: var(--padding);\n      background-color: var(--atomic-neutral);\n    }\n  }\n\n  th,\n  td {\n    border-color: transparent;\n    border-radius: initial;\n  }\n\n  th {\n    background-color: transparent;\n  }\n}\n","import {Component, h, Prop} from '@stencil/core';\nimport {\n  ResultDisplayDensity,\n  ResultDisplayImageSize,\n  getResultDisplayClasses,\n} from '../../common/layout/display-options';\n\nconst placeholderClasses = 'block bg-neutral rounded';\n\n/**\n * The `atomic-result-table-placeholder` component provides an intermediate visual state that is rendered before the first results are available.\n * @internal\n */\n@Component({\n  tag: 'atomic-result-table-placeholder',\n  styleUrl: 'atomic-result-table-placeholder.pcss',\n  shadow: true,\n})\nexport class AtomicResultTablePlaceholder {\n  @Prop() density!: ResultDisplayDensity;\n  @Prop() imageSize!: ResultDisplayImageSize;\n  @Prop() rows!: number;\n\n  private getClasses() {\n    return getResultDisplayClasses('table', this.density, this.imageSize);\n  }\n\n  public render() {\n    return (\n      <table class={`list-root animate-pulse ${this.getClasses().join(' ')}`}>\n        <thead>\n          <tr>\n            <th>\n              <div\n                class={`h-8 mt-2 ${placeholderClasses}`}\n                style={{width: '14.5rem'}}\n              ></div>\n            </th>\n            <th>\n              <div\n                class={`h-8 mt-2 ${placeholderClasses}`}\n                style={{width: '9.75rem'}}\n              ></div>\n            </th>\n            <th>\n              <div\n                class={`h-8 mt-2 ${placeholderClasses}`}\n                style={{width: '6.5rem'}}\n              ></div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.from({length: this.rows}, () => (\n            <tr>\n              <td>\n                <div\n                  class={`h-8 mb-6 ${placeholderClasses}`}\n                  style={{width: '22.875rem'}}\n                ></div>\n                <div\n                  class={`h-5 mb-2 ${placeholderClasses}`}\n                  style={{width: '23.75rem'}}\n                ></div>\n                <div\n                  class={`h-5 ${placeholderClasses}`}\n                  style={{width: '11.5rem'}}\n                ></div>\n              </td>\n              <td>\n                <div\n                  class={`h-5 mt-1.5 ${placeholderClasses}`}\n                  style={{width: '11rem'}}\n                ></div>\n              </td>\n              <td>\n                <div\n                  class={`h-5 mt-1.5 ${placeholderClasses}`}\n                  style={{width: '4.875rem'}}\n                ></div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import {Component, Prop, State} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-text` component leverages the I18n translation module through the atomic-search-interface.\n */\n@Component({\n  tag: 'atomic-text',\n  shadow: true,\n})\nexport class AtomicText implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n\n  private strings = {\n    value: () =>\n      this.bindings.i18n.t(this.value, {\n        count: this.count,\n      }),\n  };\n  @State() public error!: Error;\n\n  /**\n   * The string key value.\n   */\n  @Prop({reflect: true}) public value!: string;\n  /**\n   * The count value used for plurals.\n   */\n  @Prop({reflect: true}) public count?: number;\n\n  public connectedCallback() {\n    if (!this.value) {\n      this.error = new Error('The \"value\" attribute must be defined.');\n    }\n  }\n\n  public render() {\n    return this.strings.value();\n  }\n}\n"],"mappings":"8PAAA,MAAMA,EAA6B,m37GCQnC,MAAMC,EAAqB,yC,MAWdC,EAAuB,M,gGAK1B,iBAAAC,CAAkBC,GACxB,OACEC,EAAA,OACEC,MAAO,CACLC,OAAQ,qBACRH,UAGFC,EAAA,OACEG,MAAOP,EACPK,MAAO,CAACC,OAAQ,sB,CAMjB,MAAAE,GACL,OACEJ,EAAA,OACEG,MAAO,uDAAuDE,EAC5DC,KAAKC,QACLD,KAAKE,QACLF,KAAKG,WAEJC,KAAK,KACLC,UAEHX,EAAA,oCACEA,EAAA,OAAKG,MAAOP,KAEdI,EAAA,oCACEA,EAAA,OAAKG,MAAO,SAASP,OAEvBI,EAAA,qCACEA,EAAA,OAAKG,MAAO,UAAUP,OAExBI,EAAA,mCACEA,EAAA,OAAKG,MAAO,SAASP,OAEvBI,EAAA,qCACGM,KAAKR,kBAAkB,QACvBQ,KAAKR,kBAAkB,OACvBQ,KAAKR,kBAAkB,QAE1BE,EAAA,6CACEA,EAAA,OAAKG,MAAM,sBACRS,MAAMC,KAAK,CAACC,OAAQ,IAAI,IACvBd,EAAA,OACEG,MAAO,2BAA2BP,U,mBCvDrCmB,EAA0B,M,yBAG9B,kBAAAC,GACLC,EAAiBX,KAAKY,K,mCCLbC,EAAyB,M,yBAG7B,kBAAAH,GACLC,EAAiBX,KAAKY,K,mCCHbE,EAAiC,M,yBAGrC,kBAAAJ,GACLC,EAAiBX,KAAKY,K,mCCLbG,EAA0B,M,yBAG9B,kBAAAL,GACLC,EAAiBX,KAAKY,K,mCCJbI,EAAwB,M,yBAG5B,kBAAAN,GACLC,EAAiBX,KAAKY,K,mCCDbK,EAAyB,M,kDAQ7B,kBAAAP,GACLC,EAAiBX,KAAKY,K,6BC5B1B,MAAMM,EAAkC,slkCCOxC,MAAM5B,EAAqB,2B,MAWd6B,EAA4B,M,6FAK/B,UAAAC,GACN,OAAOrB,EAAwB,QAASC,KAAKE,QAASF,KAAKG,U,CAGtD,MAAAL,GACL,OACEJ,EAAA,SAAOG,MAAO,2BAA2BG,KAAKoB,aAAahB,KAAK,QAC9DV,EAAA,aACEA,EAAA,UACEA,EAAA,UACEA,EAAA,OACEG,MAAO,YAAYP,IACnBK,MAAO,CAACF,MAAO,cAGnBC,EAAA,UACEA,EAAA,OACEG,MAAO,YAAYP,IACnBK,MAAO,CAACF,MAAO,cAGnBC,EAAA,UACEA,EAAA,OACEG,MAAO,YAAYP,IACnBK,MAAO,CAACF,MAAO,eAKvBC,EAAA,aACGY,MAAMC,KAAK,CAACC,OAAQR,KAAKqB,OAAO,IAC/B3B,EAAA,UACEA,EAAA,UACEA,EAAA,OACEG,MAAO,YAAYP,IACnBK,MAAO,CAACF,MAAO,eAEjBC,EAAA,OACEG,MAAO,YAAYP,IACnBK,MAAO,CAACF,MAAO,cAEjBC,EAAA,OACEG,MAAO,OAAOP,IACdK,MAAO,CAACF,MAAO,cAGnBC,EAAA,UACEA,EAAA,OACEG,MAAO,cAAcP,IACrBK,MAAO,CAACF,MAAO,YAGnBC,EAAA,UACEA,EAAA,OACEG,MAAO,cAAcP,IACrBK,MAAO,CAACF,MAAO,mB,8XChEpB6B,EAAU,M,yBAGbtB,KAAAuB,QAAU,CAChBC,MAAO,IACLxB,KAAKyB,SAASC,KAAKC,EAAE3B,KAAKwB,MAAO,CAC/BI,MAAO5B,KAAK4B,S,+DAcX,iBAAAC,GACL,IAAK7B,KAAKwB,MAAO,CACfxB,KAAK8B,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAjC,GACL,OAAOE,KAAKuB,QAAQC,O,GA1BOQ,EAAA,CAA5BC,K"}