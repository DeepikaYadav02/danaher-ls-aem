{"version":3,"names":["atomicInsightPagerCss","AtomicInsightPager","this","numberOfPages","initialize","searchStatus","buildInsightSearchStatus","bindings","engine","pager","buildInsightPager","options","focusTarget","activePage","FocusTargetController","render","h","PagerCommon","eventEmitter","scrollToTopEvent","pagerState","searchStatusState","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-pager/atomic-insight-pager.pcss?tag=atomic-insight-pager&encapsulation=shadow","src/components/insight/atomic-insight-pager/atomic-insight-pager.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n[part='page-button'] {\n  @apply bg-transparent;\n}\n\n:host {\n  background: var(--atomic-neutral-light);\n  height: 100%;\n  padding: 1rem 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n","import {Component, Event, EventEmitter, h, Prop, State} from '@stencil/core';\nimport {\n  buildInsightPager,\n  buildInsightSearchStatus,\n  InsightPager,\n  InsightPagerState,\n  InsightSearchStatus,\n  InsightSearchStatusState,\n} from '../';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {PagerCommon} from '../../common/pager/pager-common';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-pager',\n  styleUrl: 'atomic-insight-pager.pcss',\n  shadow: true,\n})\nexport class AtomicInsightPager\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public pager!: InsightPager;\n  public searchStatus!: InsightSearchStatus;\n\n  @BindStateToController('pager')\n  @State()\n  public pagerState!: InsightPagerState;\n  @BindStateToController('searchStatus')\n  @State()\n  public searchStatusState!: InsightSearchStatusState;\n  @State() error!: Error;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  /**\n   * Specifies how many page buttons to display in the pager.\n   */\n  @Prop({reflect: true}) numberOfPages = 5;\n\n  private activePage?: FocusTargetController;\n\n  public initialize() {\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\n    this.pager = buildInsightPager(this.bindings.engine, {\n      options: {numberOfPages: this.numberOfPages},\n    });\n  }\n\n  private get focusTarget(): FocusTargetController {\n    if (!this.activePage) {\n      this.activePage = new FocusTargetController(this);\n    }\n\n    return this.activePage;\n  }\n\n  public render() {\n    return (\n      <PagerCommon\n        bindings={this.bindings}\n        eventEmitter={this.scrollToTopEvent}\n        activePage={this.focusTarget}\n        pager={this.pager}\n        pagerState={this.pagerState}\n        searchStatusState={this.searchStatusState}\n      />\n    );\n  }\n}\n"],"mappings":"maAAA,MAAMA,EAAwB,wghC,iXC0BjBC,EAAkB,M,8EAuBNC,KAAAC,cAAgB,E,mGAAA,C,CAIhC,UAAAC,GACLF,KAAKG,aAAeC,EAAyBJ,KAAKK,SAASC,QAC3DN,KAAKO,MAAQC,EAAkBR,KAAKK,SAASC,OAAQ,CACnDG,QAAS,CAACR,cAAeD,KAAKC,gB,CAIlC,eAAYS,GACV,IAAKV,KAAKW,WAAY,CACpBX,KAAKW,WAAa,IAAIC,EAAsBZ,K,CAG9C,OAAOA,KAAKW,U,CAGP,MAAAE,GACL,OACEC,EAACC,EAAW,CACVV,SAAUL,KAAKK,SACfW,aAAchB,KAAKiB,iBACnBN,WAAYX,KAAKU,YACjBH,MAAOP,KAAKO,MACZW,WAAYlB,KAAKkB,WACjBC,kBAAmBnB,KAAKmB,mB,GA/CDC,EAAA,CAA5BC,K,+BAMMD,EAAA,CAFNE,EAAsB,U,iCAKhBF,EAAA,CAFNE,EAAsB,iB"}