{"version":3,"names":["FacetSearchInput","props","label","i18n","t","search","facetSearch","clear","inputRef","h","class","part","type","placeholder","value","query","onInput","e","onChange","target","ref","icon","SearchIcon","Button","style","title","onClick","onClear","focus","CloseIcon","matchesFound","key","escape","interpolation","escapeValue","FacetSearchMatches","numberOfMatches","innerHTML","hasMoreMatches","FacetShowMoreLess","showMore","showMoreFacetValues","showLess","showLessFacetValues","btnClasses","iconClasses","canShowLessValues","canShowMoreValues","ariaLabel","onShowLess","showLessRef","MinusIcon","onShowMore","showMoreRef","PlusIcon","FacetValueBox","children","compactCount","Intl","NumberFormat","language","notation","format","numberOfResults","count","toLocaleString","displayValue","isSelected","ariaPressed","toString","buttonRef","text","FacetValueLink","_a","additionalPart","subList","isCategoryFacetValueRequest","Array","isArray","isFacetValueRequest","getSelectedCategoryFacetValueRequest","state","child","selectedValue","parseDependsOn","dependsOn","Object","entries","map","parentFacetId","expectedValue","condition","values","some","validateDependsOn","keys","length","shouldDisplayInputForFacetRange","facetRange","hasInput","hasInputRange","searchStatusState","facetValues","hasResults","onlyValuesWithResultsOrActive","filter","sortFacetVisibility","facetElements","facetInfoMap","visibleFacets","invisibleFacets","forEach","facet","facetId","isHidden","push","collapseFacetsAfter","facets","visibleFacetsCount","index","isCollapsed","isAutomaticFacetGenerator","element","tagName","isPseudoFacet","el","getFacetsInChildren","parent","from","getAutomaticFacetGenerator","find","sortFacetsUsingManager","facetManager","payload","f","sort","FacetCommon","constructor","opts","this","resultIndexToFocusOnShowMore","host","bindings","field","headingLevel","displayValuesAs","dependenciesManager","sortCriteria","withSearch","validateProps","facetInfo","store","registerFacet","initializePopover","hasValues","numberOfSelectedValues","Schema","StringValue","constrainTo","validate","disconnectedCallback","isConnected","stopWatching","enabled","componentShouldUpdate","next","prev","propName","shouldUpdateFacetSearchComponent","renderHeader","headerFocus","onToggleCollapse","FacetHeader","onClearFilters","focusAfterSearch","deselectAll","headerRef","setTarget","renderSearchInput","updateCaptions","getFieldCaptions","updateText","renderMatches","moreValuesAvailable","renderValuesContainer","classes","FacetValuesGroup","renderSearchResults","showLessFocus","showMoreFocus","renderValue","rawValue","singleSelect","select","renderValues","i","toggleSingleSelect","toggleSelect","facetValue","isShowLessFocusTarget","isShowMoreFocusTarget","getFieldValueCaption","FacetValueCheckbox","searchQuery","FacetValueLabelHighlight","renderShowMoreLess","showMoreValues","showLessValues","renderBody","shouldDisplaySearchResults","render","hasError","firstSearchExecuted","numberOfValues","Hidden","FacetPlaceholder","FacetContainer"],"sources":["src/components/common/facets/facet-search/facet-search-input.tsx","src/components/common/facets/facet-search/facet-search-matches.tsx","src/components/common/facets/facet-show-more-less/facet-show-more-less.tsx","src/components/common/facets/facet-value-box/facet-value-box.tsx","src/components/common/facets/facet-value-link/facet-value-link.tsx","src/components/common/facets/facet-common.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport CloseIcon from '../../../../images/close.svg';\nimport SearchIcon from '../../../../images/search.svg';\nimport {Button} from '../../button';\n\ninterface FacetSearchInputProps {\n  label: string;\n  query: string;\n  i18n: i18n;\n  onClear(): void;\n  onChange(value: string): void;\n}\n\nexport const FacetSearchInput: FunctionalComponent<FacetSearchInputProps> = (\n  props\n) => {\n  const label = props.i18n.t(props.label);\n  const search = props.i18n.t('facet-search-input');\n  const facetSearch = props.i18n.t('facet-search', {label});\n  const clear = props.i18n.t('clear');\n  let inputRef: HTMLInputElement | undefined;\n\n  return (\n    <div class=\"px-2 mt-3\" part=\"search-wrapper\">\n      <div class=\"relative h-10\">\n        <input\n          part=\"search-input\"\n          class=\"input-primary w-full h-full px-9 placeholder-neutral-dark text-sm group\"\n          type=\"text\"\n          placeholder={search}\n          aria-label={facetSearch}\n          value={props.query}\n          onInput={(e) => props.onChange((e.target as HTMLInputElement).value)}\n          ref={(ref) => (inputRef = ref)}\n        />\n        <div class=\"search-icon pointer-events-none absolute inline-flex justify-center items-center left-0 w-9 h-full text-on-background\">\n          <atomic-icon part=\"search-icon\" icon={SearchIcon}></atomic-icon>\n        </div>\n        {props.query !== '' && (\n          <Button\n            style=\"text-transparent\"\n            title={clear}\n            class=\"search-clear-button absolute inline-flex justify-center items-center right-px w-9 top-px bottom-px\"\n            onClick={() => {\n              props.onClear();\n              inputRef!.focus();\n            }}\n          >\n            <atomic-icon\n              part=\"search-clear-button\"\n              icon={CloseIcon}\n            ></atomic-icon>\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport escape from 'escape-html';\nimport {i18n} from 'i18next';\n\ninterface FacetSearchMatchesProps {\n  i18n: i18n;\n  query: string;\n  numberOfMatches: number;\n  hasMoreMatches: boolean;\n}\n\nfunction matchesFound(\n  key: 'more-matches-for' | 'no-matches-found-for',\n  query: string,\n  i18n: i18n\n) {\n  return i18n.t(key, {\n    query: `<span class=\"font-bold italic text-on-background\" part=\"matches-query\">${escape(\n      query\n    )}</span>`,\n    interpolation: {escapeValue: false},\n  });\n}\n\nexport const FacetSearchMatches: FunctionalComponent<\n  FacetSearchMatchesProps\n> = (props) => {\n  if (!props.numberOfMatches) {\n    return (\n      <div class=\"px-2\">\n        {/* file deepcode ignore ReactSetInnerHtml: This is not React code */}\n        <div\n          part=\"no-matches\"\n          class=\"truncate p-3 bg-neutral-light text-neutral-dark text-sm rounded\"\n          innerHTML={matchesFound(\n            'no-matches-found-for',\n            props.query,\n            props.i18n\n          )}\n        ></div>\n      </div>\n    );\n  }\n\n  if (props.hasMoreMatches) {\n    return (\n      <div class=\"px-2\">\n        <div\n          part=\"more-matches\"\n          class=\"truncate mt-3 text-neutral-dark text-sm\"\n          innerHTML={matchesFound('more-matches-for', props.query, props.i18n)}\n        ></div>\n      </div>\n    );\n  }\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport MinusIcon from '../../../../images/minus.svg';\nimport PlusIcon from '../../../../images/plus.svg';\nimport {Button} from '../../button';\n\ninterface FacetShowMoreProps {\n  label: string;\n  i18n: i18n;\n  canShowLessValues: boolean;\n  canShowMoreValues: boolean;\n  onShowMore(): void;\n  onShowLess(): void;\n  showMoreRef?: (element?: HTMLButtonElement) => void;\n  showLessRef?: (element?: HTMLButtonElement) => void;\n}\n\nexport const FacetShowMoreLess: FunctionalComponent<FacetShowMoreProps> = (\n  props\n) => {\n  const label = props.i18n.t(props.label);\n  const showMore = props.i18n.t('show-more');\n  const showMoreFacetValues = props.i18n.t('show-more-facet-values', {\n    label,\n  });\n  const showLess = props.i18n.t('show-less');\n  const showLessFacetValues = props.i18n.t('show-less-facet-values', {\n    label,\n  });\n  const btnClasses = 'flex items-baseline text-left p-2 text-sm max-w-full';\n  const iconClasses = 'w-2 h-2 mr-1';\n  if (!props.canShowLessValues && !props.canShowMoreValues) {\n    return;\n  }\n\n  return (\n    <div class=\"mt-2\">\n      <Button\n        style=\"text-primary\"\n        part=\"show-less\"\n        class={`${btnClasses} ${props.canShowLessValues ? '' : 'hidden'}`}\n        ariaLabel={showLessFacetValues}\n        onClick={() => props.onShowLess()}\n        ref={props.showLessRef}\n      >\n        <atomic-icon\n          part=\"show-more-less-icon\"\n          class={iconClasses}\n          icon={MinusIcon}\n        ></atomic-icon>\n        <span class=\"truncate\">{showLess}</span>\n      </Button>\n      <Button\n        style=\"text-primary\"\n        part=\"show-more\"\n        class={`${btnClasses} ${props.canShowMoreValues ? '' : 'hidden'}`}\n        ariaLabel={showMoreFacetValues}\n        onClick={() => props.onShowMore()}\n        ref={props.showMoreRef}\n      >\n        <atomic-icon\n          part=\"show-more-less-icon\"\n          class={iconClasses}\n          icon={PlusIcon}\n        ></atomic-icon>\n        <span class=\"truncate\">{showMore}</span>\n      </Button>\n    </div>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {Button} from '../../button';\nimport {FacetValueProps} from '../facet-common';\n\nexport const FacetValueBox: FunctionalComponent<FacetValueProps> = (\n  props,\n  children\n) => {\n  const compactCount = new Intl.NumberFormat(props.i18n.language, {\n    notation: 'compact',\n  }).format(props.numberOfResults);\n\n  const count = props.numberOfResults.toLocaleString(props.i18n.language);\n\n  const ariaLabel = props.i18n.t('facet-value', {\n    value: props.displayValue,\n    count: props.numberOfResults,\n  });\n\n  return (\n    <li key={props.displayValue}>\n      <Button\n        style=\"outline-bg-neutral\"\n        part={`value-box${props.isSelected ? ' value-box-selected' : ''}`}\n        onClick={() => props.onClick()}\n        class={`value-box box-border w-full h-full items-center p-2 group ${\n          props.isSelected ? 'selected' : ''\n        }`}\n        ariaPressed={props.isSelected.toString()}\n        ariaLabel={ariaLabel}\n        ref={props.buttonRef}\n      >\n        {children}\n        <span\n          title={count}\n          part=\"value-count\"\n          class=\"value-box-count text-neutral-dark truncate w-full text-sm mt-1\"\n        >\n          {props.i18n.t('between-parentheses', {\n            text: compactCount,\n          })}\n        </span>\n      </Button>\n    </li>\n  );\n};\n","import {FunctionalComponent, h, VNode} from '@stencil/core';\nimport {Button} from '../../button';\nimport {FacetValueProps} from '../facet-common';\n\nexport interface FacetValueLinkProps extends FacetValueProps {\n  subList?: VNode | VNode[];\n}\n\nexport const FacetValueLink: FunctionalComponent<FacetValueLinkProps> = (\n  props,\n  children\n) => {\n  const count = props.numberOfResults.toLocaleString(props.i18n.language);\n  const ariaLabel = props.i18n.t('facet-value', {\n    value: props.displayValue,\n    count: props.numberOfResults,\n    interpolation: {escapeValue: false},\n  });\n\n  let part =\n    props.part ?? `value-link${props.isSelected ? ' value-link-selected' : ''}`;\n\n  if (props.additionalPart) {\n    part += ` ${props.additionalPart}`;\n  }\n\n  return (\n    <li key={props.displayValue} class={props.class}>\n      <Button\n        style=\"text-neutral\"\n        part={part}\n        onClick={() => props.onClick()}\n        class=\"group w-full flex items-center px-2 py-2.5 text-left truncate no-outline\"\n        ariaPressed={props.isSelected.toString()}\n        ariaLabel={ariaLabel}\n        ref={props.buttonRef}\n      >\n        {children}\n        <span part=\"value-count\" class=\"value-count\">\n          {props.i18n.t('between-parentheses', {\n            text: count,\n          })}\n        </span>\n      </Button>\n      {props.subList}\n    </li>\n  );\n};\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  AnyFacetValuesCondition,\n  AnyFacetValueRequest,\n  FacetManager,\n} from '@coveo/headless';\nimport {VNode, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {\n  getFieldCaptions,\n  getFieldValueCaption,\n} from '../../../utils/field-utils';\nimport {FacetInfoMap} from '../../search/atomic-search-interface/store';\nimport {initializePopover} from '../../search/facets/atomic-popover/popover-type';\nimport {Hidden} from '../hidden';\nimport {AnyBindings} from '../interface/bindings';\nimport {\n  CategoryFacet,\n  CategoryFacetSortCriterion,\n  CategoryFacetState,\n  CategoryFacetValueRequest,\n  DateFacet,\n  DateFacetState,\n  Facet,\n  FacetConditionsManager,\n  FacetSearchState,\n  FacetSortCriterion,\n  FacetState,\n  FacetValue,\n  FacetValueRequest,\n  NumericFacet,\n  NumericFacetState,\n  RangeFacetSortCriterion,\n  SearchStatus,\n  SearchStatusState,\n} from '../types';\nimport {FacetInfo} from './facet-common-store';\nimport {FacetContainer} from './facet-container/facet-container';\nimport {FacetHeader} from './facet-header/facet-header';\nimport {FacetPlaceholder} from './facet-placeholder/facet-placeholder';\nimport {FacetSearchInput} from './facet-search/facet-search-input';\nimport {FacetSearchMatches} from './facet-search/facet-search-matches';\nimport {\n  shouldDisplaySearchResults,\n  shouldUpdateFacetSearchComponent,\n} from './facet-search/facet-search-utils';\nimport {FacetShowMoreLess} from './facet-show-more-less/facet-show-more-less';\nimport {FacetValueBox} from './facet-value-box/facet-value-box';\nimport {FacetValueCheckbox} from './facet-value-checkbox/facet-value-checkbox';\nimport {FacetValueLabelHighlight} from './facet-value-label-highlight/facet-value-label-highlight';\nimport {FacetValueLink} from './facet-value-link/facet-value-link';\nimport {FacetValuesGroup} from './facet-values-group/facet-values-group';\n\nexport type FacetDisplayValues = 'checkbox' | 'link' | 'box';\n\nexport type PropsOnAllFacets = {\n  facetId?: string;\n  label?: string;\n  field: string;\n  filterFacetCount: boolean;\n  injectionDepth: number;\n  dependsOn: Record<string, string>;\n};\n\ntype AnyFacetType = Facet | NumericFacet | CategoryFacet | DateFacet;\n\nexport type BaseFacet<FacetType extends AnyFacetType> = {\n  facet?: FacetType;\n  searchStatus: SearchStatus;\n  searchStatusState: SearchStatusState;\n  error: Error;\n} & PropsOnAllFacets &\n  StateProp<FacetType> &\n  SearchProp<FacetType> &\n  NumberOfValuesProp<FacetType> &\n  NumberOfIntervalsProp<FacetType> &\n  SortCriterionProp<FacetType> &\n  DisplayValuesAsProp &\n  CollapsedProp &\n  HeadingLevelProp;\n\nexport type BaseFacetElement<FacetType extends AnyFacetType = AnyFacetType> =\n  HTMLElement &\n    Required<PropsOnAllFacets> &\n    SearchProp<FacetType> &\n    NumberOfValuesProp<FacetType> &\n    NumberOfIntervalsProp<FacetType> &\n    SortCriterionProp<FacetType> &\n    DisplayValuesAsProp &\n    CollapsedProp &\n    HeadingLevelProp;\n\ntype StateProp<FacetType extends AnyFacetType> = FacetType extends Facet\n  ? {facetState: FacetState}\n  : FacetType extends NumericFacet\n  ? {facetState: NumericFacetState}\n  : FacetType extends CategoryFacet\n  ? {facetState: CategoryFacetState}\n  : FacetType extends DateFacet\n  ? {facetState: DateFacetState}\n  : {facetState: never};\n\ntype SearchProp<FacetType extends AnyFacetType> = FacetType extends\n  | Facet\n  | CategoryFacet\n  ? {withSearch: boolean}\n  : {};\n\ntype NumberOfValuesProp<FacetType extends AnyFacetType> = FacetType extends\n  | Facet\n  | CategoryFacet\n  ? {numberOfValues: number}\n  : {};\n\ntype NumberOfIntervalsProp<FacetType extends AnyFacetType> =\n  FacetType extends NumericFacet ? {numberOfIntervals?: number} : {};\n\ntype SortCriterionProp<FacetType extends AnyFacetType> = FacetType extends\n  | Facet\n  | CategoryFacet\n  ? {\n      sortCriteria: FacetType extends Facet\n        ? FacetSortCriterion\n        : CategoryFacetSortCriterion;\n    }\n  : FacetType extends NumericFacet\n  ? {sortCriteria?: RangeFacetSortCriterion}\n  : {};\n\ntype DisplayValuesAsProp = {\n  displayValueAs?: 'checkbox' | 'box' | 'link';\n};\n\ntype CollapsedProp = {isCollapsed?: boolean};\n\ntype HeadingLevelProp = {headingLevel?: number};\n\nexport interface FacetValueProps {\n  i18n: i18n;\n  displayValue: string;\n  numberOfResults: number;\n  isSelected: boolean;\n  onClick(): void;\n  searchQuery?: string;\n  class?: string;\n  part?: string;\n  additionalPart?: string;\n  buttonRef?: (element?: HTMLButtonElement) => void;\n}\n\nfunction isCategoryFacetValueRequest(\n  value: AnyFacetValueRequest\n): value is CategoryFacetValueRequest {\n  return 'children' in value && Array.isArray(value.children);\n}\n\nfunction isFacetValueRequest(\n  value: AnyFacetValueRequest\n): value is FacetValueRequest {\n  return (\n    'value' in value &&\n    typeof value.value === 'string' &&\n    !('children' in value)\n  );\n}\n\nfunction getSelectedCategoryFacetValueRequest(\n  value: CategoryFacetValueRequest\n): CategoryFacetValueRequest | null {\n  if (value.state === 'selected') {\n    return value;\n  }\n  for (const child of value.children) {\n    const selectedValue = getSelectedCategoryFacetValueRequest(child);\n    if (selectedValue !== null) {\n      return selectedValue;\n    }\n  }\n  return null;\n}\n\nexport function parseDependsOn(\n  dependsOn: Record<string, string>\n): AnyFacetValuesCondition<AnyFacetValueRequest>[] {\n  return Object.entries(dependsOn).map(([parentFacetId, expectedValue]) => {\n    return {\n      parentFacetId,\n      condition: (values) => {\n        return values.some((value) => {\n          if (isCategoryFacetValueRequest(value)) {\n            const selectedValue = getSelectedCategoryFacetValueRequest(value);\n            if (!selectedValue) {\n              return false;\n            }\n            if (!expectedValue) {\n              return true;\n            }\n            return selectedValue.value === expectedValue;\n          }\n          if (isFacetValueRequest(value)) {\n            if (value.state !== 'selected') {\n              return false;\n            }\n            if (!expectedValue) {\n              return true;\n            }\n            return value.value === expectedValue;\n          }\n          return false;\n        });\n      },\n    };\n  });\n}\n\nexport function validateDependsOn(dependsOn: Record<string, string>) {\n  if (Object.keys(dependsOn).length > 1) {\n    throw \"Depending on multiple facets isn't supported\";\n  }\n}\n\nexport function shouldDisplayInputForFacetRange(facetRange: {\n  hasInput: boolean;\n  hasInputRange: boolean;\n  searchStatusState: SearchStatusState;\n  facetValues: Pick<FacetValue, 'numberOfResults' | 'state'>[];\n}) {\n  const {hasInput, hasInputRange, searchStatusState, facetValues} = facetRange;\n  if (!hasInput) {\n    return false;\n  }\n\n  if (hasInputRange) {\n    return true;\n  }\n\n  if (!searchStatusState.hasResults) {\n    return false;\n  }\n\n  const onlyValuesWithResultsOrActive =\n    facetValues.filter(\n      (value) => value.numberOfResults || value.state !== 'idle'\n    ) || [];\n\n  if (!onlyValuesWithResultsOrActive.length) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function sortFacetVisibility(\n  facetElements: BaseFacetElement[],\n  facetInfoMap: FacetInfoMap\n) {\n  const visibleFacets: BaseFacetElement[] = [];\n  const invisibleFacets: BaseFacetElement[] = [];\n\n  facetElements.forEach((facet) => {\n    if (facetInfoMap[facet.facetId] && facetInfoMap[facet.facetId].isHidden()) {\n      invisibleFacets.push(facet);\n    } else {\n      visibleFacets.push(facet);\n    }\n  });\n\n  return {visibleFacets, invisibleFacets};\n}\n\nexport function collapseFacetsAfter(\n  facets: BaseFacetElement[],\n  visibleFacetsCount: number\n) {\n  if (visibleFacetsCount === -1) {\n    return;\n  }\n\n  facets.forEach((facet, index) => {\n    facet.isCollapsed = index + 1 > visibleFacetsCount;\n  });\n}\n\nexport function isAutomaticFacetGenerator(\n  element: HTMLElement\n): element is HTMLAtomicAutomaticFacetGeneratorElement {\n  return element.tagName === 'ATOMIC-AUTOMATIC-FACET-GENERATOR';\n}\n\nfunction isPseudoFacet(el: Element): el is BaseFacetElement {\n  return 'facetId' in el;\n}\n\nexport function getFacetsInChildren(parent: HTMLElement): BaseFacetElement[] {\n  const facets = Array.from(parent.children).filter((child) =>\n    isPseudoFacet(child)\n  ) as BaseFacetElement[];\n\n  return facets;\n}\nexport function getAutomaticFacetGenerator(\n  parent: HTMLElement\n): HTMLAtomicAutomaticFacetGeneratorElement | undefined {\n  return (Array.from(parent.children) as HTMLElement[]).find(\n    isAutomaticFacetGenerator\n  );\n}\n\nexport function sortFacetsUsingManager(\n  facets: BaseFacetElement[],\n  facetManager: FacetManager\n): BaseFacetElement[] {\n  const payload = facets.map((f) => ({\n    facetId: f.facetId,\n    payload: f,\n  }));\n  return facetManager.sort(payload).map((f) => f.payload);\n}\n\ninterface FacetCommonOptions {\n  host: HTMLElement;\n  bindings: AnyBindings;\n  label: string;\n  field: string;\n  headingLevel: number;\n  displayValuesAs: FacetDisplayValues;\n  dependsOn: Record<string, string>;\n  dependenciesManager: FacetConditionsManager;\n  facet: Facet;\n  facetId: string;\n  sortCriteria: FacetSortCriterion;\n  withSearch: boolean;\n}\n\ninterface FacetCommonRenderProps {\n  hasError: boolean;\n  firstSearchExecuted: boolean;\n  isCollapsed: boolean;\n  numberOfValues: number;\n  headerFocus: FocusTargetController;\n  showLessFocus: FocusTargetController;\n  showMoreFocus: FocusTargetController;\n  onToggleCollapse: () => boolean;\n}\n\nexport class FacetCommon {\n  private host: HTMLElement;\n  private bindings: AnyBindings;\n  private label: string;\n  private field: string;\n  private headingLevel: number;\n  private displayValuesAs: FacetDisplayValues;\n  private dependsOn: Record<string, string>;\n  public dependenciesManager: FacetConditionsManager;\n  private facet: Facet;\n  private facetId: string;\n  private sortCriteria: FacetSortCriterion;\n  private withSearch: boolean;\n\n  private resultIndexToFocusOnShowMore = 0;\n\n  constructor(opts: FacetCommonOptions) {\n    this.host = opts.host;\n    this.bindings = opts.bindings;\n    this.label = opts.label;\n    this.field = opts.field;\n    this.headingLevel = opts.headingLevel;\n    this.displayValuesAs = opts.displayValuesAs;\n    this.dependsOn = opts.dependsOn;\n    this.dependenciesManager = opts.dependenciesManager;\n    this.facet = opts.facet;\n    this.facetId = opts.facetId;\n    this.sortCriteria = opts.sortCriteria;\n    this.withSearch = opts.withSearch;\n\n    this.validateProps();\n\n    const facetInfo: FacetInfo = {\n      label: () => this.bindings.i18n.t(this.label),\n      facetId: this.facetId!,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n    this.bindings.store.registerFacet('facets', facetInfo);\n    initializePopover(this.host, {\n      ...facetInfo,\n      hasValues: () => !!this.facet.state.values.length,\n      numberOfSelectedValues: () => this.numberOfSelectedValues,\n    });\n  }\n\n  public validateProps() {\n    new Schema({\n      displayValuesAs: new StringValue({\n        constrainTo: ['checkbox', 'link', 'box'],\n      }),\n    }).validate({\n      displayValuesAs: this.displayValuesAs,\n    });\n    validateDependsOn(this.dependsOn);\n  }\n\n  public disconnectedCallback() {\n    if (this.host.isConnected) {\n      return;\n    }\n    this.dependenciesManager?.stopWatching();\n  }\n\n  private get isHidden() {\n    return !this.facet.state.enabled || !this.facet.state.values.length;\n  }\n\n  public componentShouldUpdate(\n    next: FacetSearchState,\n    prev: FacetSearchState,\n    propName: string\n  ) {\n    if (propName === 'facetState' && prev && this.withSearch) {\n      return shouldUpdateFacetSearchComponent(next, prev);\n    }\n\n    return true;\n  }\n\n  public renderHeader(\n    headerFocus: FocusTargetController,\n    isCollapsed: boolean,\n    onToggleCollapse: () => boolean\n  ) {\n    return (\n      <FacetHeader\n        i18n={this.bindings.i18n}\n        label={this.label}\n        onClearFilters={() => {\n          headerFocus.focusAfterSearch();\n          this.facet.deselectAll();\n        }}\n        numberOfSelectedValues={this.numberOfSelectedValues}\n        isCollapsed={isCollapsed}\n        headingLevel={this.headingLevel}\n        onToggleCollapse={onToggleCollapse}\n        headerRef={(el) => headerFocus.setTarget(el)}\n      ></FacetHeader>\n    );\n  }\n\n  private get numberOfSelectedValues() {\n    return this.facet.state.values.filter(({state}) => state === 'selected')\n      .length;\n  }\n\n  private renderSearchInput() {\n    if (!this.withSearch) {\n      return;\n    }\n\n    return (\n      <FacetSearchInput\n        i18n={this.bindings.i18n}\n        label={this.label}\n        query={this.facet.state.facetSearch.query}\n        onChange={(value) => {\n          if (value === '') {\n            this.facet.facetSearch.clear();\n            return;\n          }\n          this.facet.facetSearch.updateCaptions(\n            getFieldCaptions(this.field, this.bindings.i18n)\n          );\n          this.facet.facetSearch.updateText(value);\n          this.facet.facetSearch.search();\n        }}\n        onClear={() => this.facet.facetSearch.clear()}\n      ></FacetSearchInput>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facet.state.facetSearch.query}\n        numberOfMatches={this.facet.state.facetSearch.values.length}\n        hasMoreMatches={this.facet.state.facetSearch.moreValuesAvailable}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[], query?: string) {\n    const classes = `mt-3 ${\n      this.displayValuesAs === 'box' ? 'box-container' : ''\n    }`;\n    return (\n      <FacetValuesGroup\n        i18n={this.bindings.i18n}\n        label={this.label}\n        query={query}\n      >\n        <ul class={classes} part=\"values\">\n          {children}\n        </ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderSearchResults(\n    showLessFocus: FocusTargetController,\n    showMoreFocus: FocusTargetController\n  ) {\n    return this.renderValuesContainer(\n      this.facet.state.facetSearch.values.map((value) =>\n        this.renderValue(\n          {\n            state: 'idle',\n            numberOfResults: value.count,\n            value: value.rawValue,\n          },\n          () =>\n            this.displayValuesAs === 'link'\n              ? this.facet.facetSearch.singleSelect(value)\n              : this.facet.facetSearch.select(value),\n          false,\n          false,\n          showLessFocus,\n          showMoreFocus\n        )\n      ),\n      this.facet.state.facetSearch.query\n    );\n  }\n\n  private renderValues(\n    showLessFocus: FocusTargetController,\n    showMoreFocus: FocusTargetController\n  ) {\n    return this.renderValuesContainer(\n      this.facet.state.values.map((value, i) =>\n        this.renderValue(\n          value,\n          () =>\n            this.displayValuesAs === 'link'\n              ? this.facet.toggleSingleSelect(value)\n              : this.facet.toggleSelect(value),\n          i === 0,\n          i ===\n            (this.sortCriteria === 'automatic'\n              ? 0\n              : this.resultIndexToFocusOnShowMore),\n          showLessFocus,\n          showMoreFocus\n        )\n      )\n    );\n  }\n\n  private renderValue(\n    facetValue: FacetValue,\n    onClick: () => void,\n    isShowLessFocusTarget: boolean,\n    isShowMoreFocusTarget: boolean,\n    showLessFocus: FocusTargetController,\n    showMoreFocus: FocusTargetController\n  ) {\n    const displayValue = getFieldValueCaption(\n      this.field,\n      facetValue.value,\n      this.bindings.i18n\n    );\n    const isSelected = facetValue.state === 'selected';\n    switch (this.displayValuesAs) {\n      case 'checkbox':\n        return (\n          <FacetValueCheckbox\n            displayValue={displayValue}\n            numberOfResults={facetValue.numberOfResults}\n            isSelected={isSelected}\n            i18n={this.bindings.i18n}\n            onClick={onClick}\n            searchQuery={this.facet.state.facetSearch.query}\n            buttonRef={(element) => {\n              isShowLessFocusTarget && showLessFocus.setTarget(element);\n              isShowMoreFocusTarget && showMoreFocus.setTarget(element);\n            }}\n          >\n            <FacetValueLabelHighlight\n              displayValue={displayValue}\n              isSelected={isSelected}\n              searchQuery={this.facet.state.facetSearch.query}\n            ></FacetValueLabelHighlight>\n          </FacetValueCheckbox>\n        );\n      case 'link':\n        return (\n          <FacetValueLink\n            displayValue={displayValue}\n            numberOfResults={facetValue.numberOfResults}\n            isSelected={isSelected}\n            i18n={this.bindings.i18n}\n            onClick={onClick}\n            searchQuery={this.facet.state.facetSearch.query}\n            buttonRef={(element) => {\n              isShowLessFocusTarget && showLessFocus.setTarget(element);\n              isShowMoreFocusTarget && showMoreFocus.setTarget(element);\n            }}\n          >\n            <FacetValueLabelHighlight\n              displayValue={displayValue}\n              isSelected={isSelected}\n              searchQuery={this.facet.state.facetSearch.query}\n            ></FacetValueLabelHighlight>\n          </FacetValueLink>\n        );\n      case 'box':\n        return (\n          <FacetValueBox\n            displayValue={displayValue}\n            numberOfResults={facetValue.numberOfResults}\n            isSelected={isSelected}\n            i18n={this.bindings.i18n}\n            onClick={onClick}\n            searchQuery={this.facet.state.facetSearch.query}\n            buttonRef={(element) => {\n              isShowLessFocusTarget && showLessFocus.setTarget(element);\n              isShowMoreFocusTarget && showMoreFocus.setTarget(element);\n            }}\n          >\n            <FacetValueLabelHighlight\n              displayValue={displayValue}\n              isSelected={isSelected}\n              searchQuery={this.facet.state.facetSearch.query}\n            ></FacetValueLabelHighlight>\n          </FacetValueBox>\n        );\n    }\n  }\n\n  private renderShowMoreLess(\n    showLessFocus: FocusTargetController,\n    showMoreFocus: FocusTargetController\n  ) {\n    return (\n      <FacetShowMoreLess\n        label={this.label}\n        i18n={this.bindings.i18n}\n        onShowMore={() => {\n          this.resultIndexToFocusOnShowMore = this.facet.state.values.length;\n          showMoreFocus.focusAfterSearch();\n          this.facet.showMoreValues();\n        }}\n        onShowLess={() => {\n          showLessFocus.focusAfterSearch();\n          this.facet.showLessValues();\n        }}\n        canShowMoreValues={this.facet.state.canShowMoreValues}\n        canShowLessValues={this.facet.state.canShowLessValues}\n      ></FacetShowMoreLess>\n    );\n  }\n\n  public renderBody(\n    showLessFocus: FocusTargetController,\n    showMoreFocus: FocusTargetController\n  ) {\n    return [\n      this.renderSearchInput(),\n      shouldDisplaySearchResults(this.facet.state.facetSearch)\n        ? [\n            this.renderSearchResults(showLessFocus, showMoreFocus),\n            this.renderMatches(),\n          ]\n        : [\n            this.renderValues(showLessFocus, showMoreFocus),\n            this.renderShowMoreLess(showLessFocus, showMoreFocus),\n          ],\n    ];\n  }\n\n  public render({\n    hasError,\n    firstSearchExecuted,\n    isCollapsed,\n    numberOfValues,\n    headerFocus,\n    showLessFocus,\n    showMoreFocus,\n    onToggleCollapse,\n  }: FacetCommonRenderProps) {\n    if (hasError || !this.facet.state.enabled) {\n      return <Hidden></Hidden>;\n    }\n\n    if (!firstSearchExecuted) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={numberOfValues}\n          isCollapsed={isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n\n    if (!this.facet.state.values.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <FacetContainer>\n        {this.renderHeader(headerFocus, isCollapsed, onToggleCollapse)}\n        {!isCollapsed && this.renderBody(showLessFocus, showMoreFocus)}\n      </FacetContainer>\n    );\n  }\n}\n"],"mappings":"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"}