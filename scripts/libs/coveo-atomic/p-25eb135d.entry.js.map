{"version":3,"names":["atomicInsightSearchBoxCss","AtomicInsightSearchBox","this","suggestedQuery","isExpanded","suggestionElements","activeDescendant","disableSearch","numberOfSuggestions","initialize","id","randomID","querySetActions","loadInsightQuerySetActions","bindings","engine","searchBoxOptions","highlightOptions","notMatchDelimiters","open","close","correctionDelimiters","searchBox","buildInsightSearchBox","options","searchBoxCommon","SearchBoxCommon","focusValue","bind","clearSuggestions","getIsSearchDisabled","getIsExpanded","getPanelInFocus","panelRef","getActiveDescendant","getActiveDescendantElement","activeDescendantElement","getAllSuggestionElements","suggestions","_b","_a","searchBoxState","hasActiveDescendant","querySelector","updateActiveDescendant","clearSuggestionElements","searchBoxAriaMessage","onSubmit","click","submit","onSuggestionMouseOver","item","query","updateSuggestedQuery","updateQueryFromSuggestion","getAttribute","queryDataAttribute","value","updateQuery","updateAriaLiveActiveDescendant","isMacOS","suggestionsAriaMessage","ariaLabel","scrollActiveDescendantIntoView","updateSuggestionElements","getSuggestionElements","elements","map","suggestion","renderSuggestionItem","max","filter","elementHasNoQuery","length","slice","onKeyDown","e","key","preventDefault","focusNextValue","firstValue","focusPreviousValue","updateAriaMessage","elsLength","elementHasQuery","i18n","t","count","triggerSuggestions","onInput","updateText","onFocus","showSuggestions","renderSuggestion","index","lastIndex","isSelected","hideIfLast","h","ButtonSearchSuggestion","side","isDoubleList","onClick","onSuggestionClick","onMouseOver","hasQuery","state","part","content","class","icon","SearchIcon","innerHTML","highlightedValue","rawValue","encodeForDomAttribute","interpolation","escapeValue","onSelect","selectSuggestion","renderPanel","setRef","getRef","ref","onMouseDown","target","renderSuggestions","hasSuggestions","popupId","role","el","componentWillRender","render","SearchBoxWrapper","disabled","style","display","onFocusExit","SearchInput","inputRef","loading","isLoading","getSearchInputLabel","placeholder","onClear","clear","__decorate","InitializeBindings","BindStateToController","AriaLiveRegion"],"sources":["src/components/insight/atomic-insight-search-box/atomic-insight-search-box.pcss?tag=atomic-insight-search-box&encapsulation=shadow","src/components/insight/atomic-insight-search-box/atomic-insight-search-box.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/search-box/search-box.pcss';\n\n[part='wrapper'] {\n  height: auto;\n}\n\n[part='input'] {\n  padding-top: 0.675rem;\n  padding-bottom: 0.675rem;\n}\n\n[part='submit-icon'] {\n  color: var(--atomic-on-background);\n}\n\n[part='submit-button'] {\n  @apply w-10 flex justify-center items-center;\n}\n\n.loading::after {\n  content: '';\n  @apply absolute w-5/6 h-5/6 bg-background rounded-full;\n}\n","import {QuerySetActionCreators, Suggestion} from '@coveo/headless';\nimport {Component, h, Prop, State} from '@stencil/core';\nimport {\n  buildInsightSearchBox,\n  InsightSearchBox,\n  InsightSearchBoxState,\n  loadInsightQuerySetActions,\n} from '..';\nimport SearchIcon from '../../../images/search.svg';\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\nimport {isMacOS} from '../../../utils/device-utils';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {encodeForDomAttribute} from '../../../utils/string-utils';\nimport {randomID} from '../../../utils/utils';\nimport {SearchBoxCommon} from '../../common/search-box/search-box-common';\nimport {SearchBoxWrapper} from '../../common/search-box/search-box-wrapper';\nimport {SearchInput} from '../../common/search-box/search-input';\nimport {\n  ButtonSearchSuggestion,\n  queryDataAttribute,\n} from '../../search/atomic-search-box/search-suggestion';\nimport {\n  elementHasNoQuery,\n  elementHasQuery,\n  SearchBoxSuggestionElement,\n} from '../../search/search-box-suggestions/suggestions-common';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-search-box',\n  styleUrl: 'atomic-insight-search-box.pcss',\n  shadow: true,\n})\nexport class AtomicInsightSearchBox {\n  @InitializeBindings() public bindings!: InsightBindings;\n\n  private searchBox!: InsightSearchBox;\n  private id!: string;\n  private inputRef!: HTMLInputElement;\n  private panelRef: HTMLElement | undefined;\n  private querySetActions!: QuerySetActionCreators;\n  private searchBoxCommon!: SearchBoxCommon;\n\n  @BindStateToController('searchBox')\n  @State()\n  private searchBoxState!: InsightSearchBoxState;\n  @State() public error!: Error;\n  @State() private suggestedQuery = '';\n  @State() private isExpanded = false;\n  @State() private suggestionElements: SearchBoxSuggestionElement[] = [];\n  @State() private activeDescendant = '';\n\n  /**\n   * Whether to prevent the user from triggering a search from the component.\n   * Perfect for use cases where you need to disable the search conditionally, like when the input is empty.\n   */\n  @Prop({reflect: true}) public disableSearch = false;\n  /**\n   * The number of query suggestions to display when interacting with the search box.\n   */\n  @Prop({reflect: true}) public numberOfSuggestions = 5;\n\n  @AriaLiveRegion('search-box')\n  protected searchBoxAriaMessage!: string;\n\n  @AriaLiveRegion('search-suggestions', true)\n  protected suggestionsAriaMessage!: string;\n\n  public initialize() {\n    this.id = randomID('atomic-search-box-');\n    this.querySetActions = loadInsightQuerySetActions(this.bindings.engine);\n\n    const searchBoxOptions = {\n      id: this.id,\n      numberOfSuggestions: this.numberOfSuggestions,\n      highlightOptions: {\n        notMatchDelimiters: {\n          open: '<span class=\"font-bold\">',\n          close: '</span>',\n        },\n        correctionDelimiters: {\n          open: '<span class=\"font-normal\">',\n          close: '</span>',\n        },\n      },\n    };\n\n    this.searchBox = buildInsightSearchBox(this.bindings.engine, {\n      options: searchBoxOptions,\n    });\n\n    this.searchBoxCommon = new SearchBoxCommon({\n      id: this.id,\n      bindings: this.bindings,\n      querySetActions: this.querySetActions,\n      focusValue: this.focusValue.bind(this),\n      clearSuggestions: this.clearSuggestions.bind(this),\n      getIsSearchDisabled: () => this.disableSearch,\n      getIsExpanded: () => this.isExpanded,\n      getPanelInFocus: () => this.panelRef,\n      getActiveDescendant: () => this.activeDescendant,\n      getActiveDescendantElement: () => this.activeDescendantElement,\n      getAllSuggestionElements: () => this.suggestionElements,\n    });\n  }\n\n  private get suggestions() {\n    return this.searchBoxState?.suggestions ?? [];\n  }\n\n  private get activeDescendantElement(): HTMLElement | null {\n    if (!this.searchBoxCommon.hasActiveDescendant) {\n      return null;\n    }\n\n    return this.panelRef?.querySelector(`#${this.activeDescendant}`) || null;\n  }\n\n  private updateActiveDescendant(activeDescendant = '') {\n    this.activeDescendant = activeDescendant;\n  }\n\n  private clearSuggestionElements() {\n    this.suggestionElements = [];\n    this.searchBoxAriaMessage = '';\n  }\n\n  private clearSuggestions() {\n    this.isExpanded = false;\n    this.updateActiveDescendant();\n    this.clearSuggestionElements();\n  }\n\n  private onSubmit() {\n    if (this.activeDescendantElement) {\n      this.activeDescendantElement.click();\n      this.updateActiveDescendant();\n      return;\n    }\n\n    this.searchBox.submit();\n    this.updateActiveDescendant();\n    this.clearSuggestions();\n  }\n\n  private onSuggestionMouseOver(item: SearchBoxSuggestionElement, id: string) {\n    this.updateActiveDescendant(id);\n    if (item.query) {\n      this.updateSuggestedQuery(item.query);\n    }\n  }\n\n  private updateQueryFromSuggestion() {\n    const suggestedQuery =\n      this.activeDescendantElement?.getAttribute(queryDataAttribute);\n    if (suggestedQuery && this.searchBoxState.value !== suggestedQuery) {\n      this.searchBoxCommon.updateQuery(suggestedQuery);\n      this.updateSuggestedQuery(suggestedQuery);\n    }\n  }\n\n  private updateAriaLiveActiveDescendant(value: HTMLElement) {\n    if (isMacOS()) {\n      this.suggestionsAriaMessage = value.ariaLabel!;\n    }\n  }\n\n  private focusValue(value: HTMLElement) {\n    this.updateActiveDescendant(value.id);\n    this.searchBoxCommon.scrollActiveDescendantIntoView();\n    this.updateQueryFromSuggestion();\n    this.updateAriaLiveActiveDescendant(value);\n  }\n\n  private updateSuggestionElements() {\n    this.suggestionElements = this.getSuggestionElements(this.suggestions);\n  }\n\n  private getSuggestionElements(suggestions: Suggestion[]) {\n    const elements = suggestions.map((suggestion) =>\n      this.renderSuggestionItem(suggestion)\n    );\n    const max =\n      this.numberOfSuggestions + elements.filter(elementHasNoQuery).length;\n\n    return elements.slice(0, max);\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    if (this.disableSearch) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Enter':\n        this.onSubmit();\n        break;\n      case 'Escape':\n        this.clearSuggestions();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.searchBoxCommon.focusNextValue();\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        if (this.searchBoxCommon.firstValue === this.activeDescendantElement) {\n          this.updateActiveDescendant();\n        } else {\n          this.searchBoxCommon.focusPreviousValue();\n        }\n        break;\n      case 'Tab':\n        this.clearSuggestions();\n        break;\n    }\n  }\n\n  private updateAriaMessage() {\n    const elsLength = this.suggestionElements.filter(elementHasQuery).length;\n    this.searchBoxAriaMessage = elsLength\n      ? this.bindings.i18n.t('query-suggestions-available', {\n          count: elsLength,\n        })\n      : this.bindings.i18n.t('query-suggestions-unavailable');\n  }\n\n  private async triggerSuggestions() {\n    this.updateSuggestedQuery('');\n    this.updateAriaMessage();\n  }\n\n  private onInput(value: string) {\n    this.isExpanded = true;\n    this.searchBox.updateText(value);\n    this.triggerSuggestions();\n  }\n\n  private onFocus() {\n    this.isExpanded = true;\n    this.updateActiveDescendant();\n    this.searchBox.showSuggestions();\n    this.triggerSuggestions();\n  }\n\n  private async updateSuggestedQuery(suggestedQuery: string) {\n    this.suggestedQuery = suggestedQuery;\n  }\n\n  private renderSuggestion(\n    item: SearchBoxSuggestionElement,\n    index: number,\n    lastIndex: number\n  ) {\n    const id = `${this.id}-suggestion-${item.key}`;\n\n    const isSelected =\n      id === this.activeDescendant || this.suggestedQuery === item.query;\n\n    if (index === lastIndex && item.hideIfLast) {\n      return null;\n    }\n\n    return (\n      <ButtonSearchSuggestion\n        bindings={this.bindings}\n        id={id}\n        suggestion={item}\n        isSelected={isSelected}\n        side={'left'}\n        index={index}\n        lastIndex={lastIndex}\n        isDoubleList={false}\n        onClick={(e: Event) => {\n          this.searchBoxCommon.onSuggestionClick(item, e);\n        }}\n        onMouseOver={() => {\n          this.onSuggestionMouseOver(item, id);\n        }}\n      ></ButtonSearchSuggestion>\n    );\n  }\n\n  private renderSuggestionItem(\n    suggestion: Suggestion\n  ): SearchBoxSuggestionElement {\n    const hasQuery = this.searchBox.state.value !== '';\n    return {\n      part: 'query-suggestion-item',\n      content: (\n        <div part=\"query-suggestion-content\" class=\"flex items-center\">\n          <atomic-icon\n            part=\"query-suggestion-icon\"\n            icon={SearchIcon}\n            class=\"w-4 h-4 mr-2 shrink-0\"\n          ></atomic-icon>\n          {hasQuery ? (\n            <span\n              part=\"query-suggestion-text\"\n              class=\"break-all line-clamp-2\"\n              innerHTML={suggestion.highlightedValue}\n            ></span>\n          ) : (\n            <span part=\"query-suggestion-text\" class=\"break-all line-clamp-2\">\n              {suggestion.rawValue}\n            </span>\n          )}\n        </div>\n      ),\n      key: `qs-${encodeForDomAttribute(suggestion.rawValue)}`,\n      query: suggestion.rawValue,\n      ariaLabel: this.bindings.i18n.t('query-suggestion-label', {\n        query: suggestion.rawValue,\n        interpolation: {escapeValue: false},\n      }),\n      onSelect: () => {\n        this.searchBox.selectSuggestion(suggestion.rawValue);\n      },\n    };\n  }\n\n  private renderPanel(\n    elements: SearchBoxSuggestionElement[],\n    setRef: (el: HTMLElement | undefined) => void,\n    getRef: () => HTMLElement | undefined\n  ) {\n    if (!elements.length) {\n      return null;\n    }\n\n    return (\n      <div\n        part={'suggestions'}\n        ref={setRef}\n        class=\"flex flex-grow basis-1/2 flex-col\"\n        onMouseDown={(e) => {\n          if (e.target === getRef()) {\n            e.preventDefault();\n          }\n        }}\n      >\n        {elements.map((suggestion, index) =>\n          this.renderSuggestion(suggestion, index, elements.length - 1)\n        )}\n      </div>\n    );\n  }\n\n  private renderSuggestions() {\n    if (!this.searchBoxCommon.hasSuggestions) {\n      this.updateSuggestedQuery('');\n      this.updateActiveDescendant();\n      return null;\n    }\n\n    return (\n      <div\n        id={this.searchBoxCommon.popupId}\n        part=\"suggestions-wrapper\"\n        class={`flex w-full z-10 absolute left-0 top-full rounded-md bg-background border border-neutral ${\n          this.searchBoxCommon.showSuggestions ? '' : 'hidden'\n        }`}\n        role=\"application\"\n        aria-label={this.bindings.i18n.t('search-suggestions-single-list')}\n        aria-activedescendant={this.activeDescendant}\n      >\n        {this.renderPanel(\n          this.suggestionElements,\n          (el) => (this.panelRef = el),\n          () => this.panelRef\n        )}\n      </div>\n    );\n  }\n\n  componentWillRender() {\n    this.updateSuggestionElements();\n  }\n\n  public render() {\n    return (\n      <SearchBoxWrapper disabled={this.disableSearch}>\n        <atomic-focus-detector\n          style={{display: 'contents'}}\n          onFocusExit={() => this.clearSuggestions()}\n        >\n          <atomic-icon\n            part=\"submit-icon\"\n            icon={SearchIcon}\n            class=\"w-4 h-full my-auto mr-0 ml-4\"\n          />\n          <SearchInput\n            inputRef={this.inputRef}\n            loading={this.searchBoxState.isLoading}\n            ref={(el) => (this.inputRef = el as HTMLInputElement)}\n            bindings={this.bindings}\n            value={this.searchBoxState.value}\n            ariaLabel={this.searchBoxCommon.getSearchInputLabel()}\n            placeholder={this.bindings.i18n.t('search-ellipsis')}\n            onFocus={() => this.onFocus()}\n            onKeyDown={(e) => this.onKeyDown(e)}\n            onClear={() => this.searchBox.clear()}\n            onInput={(e) => this.onInput((e.target as HTMLInputElement).value)}\n          />\n          {this.renderSuggestions()}\n        </atomic-focus-detector>\n      </SearchBoxWrapper>\n    );\n  }\n}\n"],"mappings":"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"}