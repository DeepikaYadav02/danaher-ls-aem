{"version":3,"names":["atomicBreadboxCss","SEPARATOR","ELLIPSIS","AtomicBreadbox","this","lastRemovedBreadcrumbIndex","numberOfBreadcrumbs","numberOfCollapsedBreadcrumbs","isCollapsed","pathLimit","initialize","validateProps","breadcrumbManager","buildBreadcrumbManager","bindings","engine","facetManager","buildFacetManager","window","ResizeObserver","resizeObserver","adaptBreadcrumbs","observe","host","parentElement","Schema","NumberValue","default","min","required","validate","disconnectedCallback","_a","disconnect","focusTargets","breadcrumbRemovedFocus","FocusTargetController","breadcrumbShowLessFocus","breadcrumbShowMoreFocus","breadcrumbs","Array","from","shadowRoot","querySelectorAll","hide","element","style","display","show","showAllBreadcrumbs","forEach","breadcrumb","hideOverflowingBreadcrumbs","hiddenBreadcrumbs","i","length","isOverflowing","updateShowMoreValue","updateShowLessDisplay","showLess","offsetTop","listElement","querySelector","scrollWidth","clientWidth","limitPath","path","join","ellipsedPath","slice","renderBreadcrumb","index","totalBreadcrumbs","fullValue","isArray","formattedValue","value","title","label","isLastBreadcrumb","h","class","key","Button","part","ariaLabel","i18n","t","onClick","store","state","resultList","focusOnFirstResultAfterNextSearch","focusAfterSearch","deselect","ref","setTarget","firstExpandedBreadcrumbIndex","text","content","icon","CloseIcon","showMore","textContent","toLocaleString","language","setAttribute","renderShowMore","focusOnNextTarget","renderShowLess","renderClearAll","isFocusTarget","async","deselectAll","undefined","facetBreadcrumbs","breadcrumbManagerState","map","facetId","field","values","flat","filter","facets","getFieldValueCaption","categoryFacetBreadcrumbs","categoryFacets","pathValue","numericFacetBreadcrumbs","numericFacets","format","_b","call","dateFacetBreadcrumbs","dateFacets","automaticFacetBreadcrumbs","flatMap","allBreadcrumbs","renderBreadcrumbs","sortedBreadcrumbs","sort","a","b","indexA","facetManagerState","facetIds","indexOf","indexB","render","Hidden","componentDidRender","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-breadbox/atomic-breadbox.pcss?tag=atomic-breadbox&encapsulation=shadow","src/components/search/atomic-breadbox/atomic-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../atomic-rating/atomic-rating.pcss';\n\n.max-w-snippet {\n  max-width: 30ch;\n}\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  BreadcrumbManagerState,\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n  FacetManager,\n  FacetManagerState,\n  buildFacetManager,\n} from '@coveo/headless';\nimport {Component, h, State, Element, VNode, Prop} from '@stencil/core';\nimport CloseIcon from '../../../images/close.svg';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Hidden} from '../../common/hidden';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\ninterface Breadcrumb {\n  facetId: string;\n  label: string;\n  formattedValue: string[];\n  content?: VNode;\n  deselect: () => void;\n}\n\nconst SEPARATOR = ' / ';\nconst ELLIPSIS = '...';\n\n/**\n * The `atomic-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\n *\n * @part container - The container of the whole component, list & label.\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\n * @part breadcrumb-list - The list of breadcrumb buttons.\n * @part breadcrumb-button - A single breadcrumb button.\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\n * @part breadcrumb-value - The breadcrumb formatted value.\n * @part breadcrumb-clear - The button to clear individual filters.\n * @part show-more - The button to display all breadcrumbs.\n * @part show-less - The button to display less breadcrumbs.\n * @part label - The \"Filters\" label.\n * @part clear - The button to clear all filters.\n */\n@Component({\n  tag: 'atomic-breadbox',\n  styleUrl: 'atomic-breadbox.pcss',\n  shadow: true,\n})\nexport class AtomicBreadbox implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private breadcrumbManager!: BreadcrumbManager;\n  private resizeObserver?: ResizeObserver;\n  private showMore!: HTMLButtonElement;\n  private showLess!: HTMLButtonElement;\n  private lastRemovedBreadcrumbIndex = 0;\n  private numberOfBreadcrumbs = 0;\n  private numberOfCollapsedBreadcrumbs = 0;\n  private firstExpandedBreadcrumbIndex?: number;\n  facetManager!: FacetManager;\n\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @BindStateToController('facetManager')\n  @State()\n  public facetManagerState!: FacetManagerState;\n  @State() public error!: Error;\n  @State() private isCollapsed = true;\n\n  private breadcrumbRemovedFocus?: FocusTargetController;\n\n  private breadcrumbShowMoreFocus?: FocusTargetController;\n\n  private breadcrumbShowLessFocus?: FocusTargetController;\n\n  /**\n   * This prop allows you to control the display depth\n   * of the path by specifying the number of parent or ancestor\n   * breadcrumbs links relative to the currently selected value.\n   *\n   * If the path size is equal to or less than the pathLimit, all values in\n   * the path will be displayed without truncation.\n   *\n   * If the path size exceeds the pathLimit, it will truncate the path by\n   * replacing the middle values with ellipses ('...').\n   *\n   * Minimum: `1`\n   * @defaultValue `3`\n   */\n  @Prop() public pathLimit = 3;\n\n  public initialize() {\n    this.validateProps();\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.facetManager = buildFacetManager(this.bindings.engine);\n\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\n      this.resizeObserver.observe(this.host.parentElement!);\n    }\n  }\n\n  private validateProps() {\n    new Schema({\n      pathLimit: new NumberValue({\n        default: 3,\n        min: 1,\n        required: false,\n      }),\n    }).validate({\n      pathLimit: this.pathLimit,\n    });\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  private get focusTargets() {\n    if (!this.breadcrumbRemovedFocus) {\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowLessFocus) {\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowMoreFocus) {\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\n    }\n    return {\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\n    };\n  }\n\n  private get breadcrumbs() {\n    return Array.from(\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\n    ) as HTMLElement[];\n  }\n\n  private hide(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  private show(element: HTMLElement) {\n    element.style.display = '';\n  }\n\n  private showAllBreadcrumbs() {\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\n  }\n\n  private hideOverflowingBreadcrumbs() {\n    let hiddenBreadcrumbs = 0;\n    for (\n      let i = this.breadcrumbs.length - 1;\n      this.isOverflowing && i >= 0;\n      i--\n    ) {\n      this.hide(this.breadcrumbs[i]);\n      hiddenBreadcrumbs++;\n    }\n    this.updateShowMoreValue(hiddenBreadcrumbs);\n  }\n\n  private updateShowLessDisplay() {\n    this.show(this.showLess);\n    if (this.showLess.offsetTop === 0) {\n      this.hide(this.showLess);\n    }\n  }\n\n  private adaptBreadcrumbs() {\n    if (!this.breadcrumbs.length) {\n      return;\n    }\n    this.showAllBreadcrumbs();\n\n    if (!this.isCollapsed) {\n      this.updateShowLessDisplay();\n      return;\n    }\n\n    this.updateShowMoreValue(this.breadcrumbs.length);\n    this.hideOverflowingBreadcrumbs();\n  }\n\n  private get isOverflowing() {\n    const listElement = this.host.shadowRoot!.querySelector('ul');\n    if (!listElement) {\n      return false;\n    }\n    return listElement.scrollWidth > listElement.clientWidth;\n  }\n\n  private limitPath(path: string[]) {\n    if (path.length <= this.pathLimit) {\n      return path.join(SEPARATOR);\n    }\n\n    if (this.pathLimit === 1 && path.length > 1) {\n      return [ELLIPSIS, path[path.length - 1]].join(SEPARATOR);\n    }\n\n    const ellipsedPath = [\n      path[0],\n      ELLIPSIS,\n      ...path.slice(-(this.pathLimit - 1)),\n    ];\n    return ellipsedPath.join(SEPARATOR);\n  }\n\n  private renderBreadcrumb(\n    breadcrumb: Breadcrumb,\n    index: number,\n    totalBreadcrumbs: number\n  ) {\n    const fullValue = Array.isArray(breadcrumb.formattedValue)\n      ? breadcrumb.formattedValue.join(SEPARATOR)\n      : breadcrumb.formattedValue;\n    const value = Array.isArray(breadcrumb.formattedValue)\n      ? this.limitPath(breadcrumb.formattedValue)\n      : breadcrumb.formattedValue;\n    const title = `${breadcrumb.label}: ${fullValue}`;\n    const isLastBreadcrumb = totalBreadcrumbs === 1;\n\n    return (\n      <li class=\"breadcrumb\" key={value}>\n        <Button\n          part=\"breadcrumb-button\"\n          style=\"outline-bg-neutral\"\n          class=\"py-2 px-3 flex items-center btn-pill group\"\n          title={title}\n          ariaLabel={this.bindings.i18n.t('remove-filter-on', {\n            value: title,\n          })}\n          onClick={() => {\n            if (isLastBreadcrumb) {\n              this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n            } else if (this.numberOfBreadcrumbs > 1) {\n              this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\n            }\n\n            this.lastRemovedBreadcrumbIndex = index;\n            breadcrumb.deselect();\n          }}\n          ref={(ref) => {\n            if (this.lastRemovedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\n            }\n            if (this.firstExpandedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\n            }\n          }}\n        >\n          <span\n            part=\"breadcrumb-label\"\n            class=\"max-w-snippet truncate text-neutral-dark mr-0.5 group-hover:text-primary group-focus-visible:text-primary\"\n          >\n            {this.bindings.i18n.t('with-colon', {text: breadcrumb.label})}\n          </span>\n          <span\n            part=\"breadcrumb-value\"\n            class={breadcrumb.content ? '' : 'max-w-snippet truncate'}\n          >\n            {breadcrumb.content ?? value}\n          </span>\n          <atomic-icon\n            part=\"breadcrumb-clear\"\n            class=\"w-2.5 h-2.5 ml-2 mt-px\"\n            icon={CloseIcon}\n          ></atomic-icon>\n        </Button>\n      </li>\n    );\n  }\n\n  private updateShowMoreValue(value: number) {\n    this.numberOfCollapsedBreadcrumbs = value;\n    if (value === 0) {\n      this.hide(this.showMore);\n      return;\n    }\n\n    this.show(this.showMore);\n    this.showMore.textContent = `+ ${value.toLocaleString(\n      this.bindings.i18n.language\n    )}`;\n\n    this.showMore.setAttribute(\n      'aria-label',\n      this.bindings.i18n.t('show-n-more-filters', {\n        value,\n      })\n    );\n  }\n\n  private renderShowMore() {\n    return (\n      <li key=\"show-more\">\n        <Button\n          ref={(ref) => {\n            this.focusTargets.breadcrumbShowLessFocus.setTarget(ref!);\n            this.showMore = ref!;\n          }}\n          part=\"show-more\"\n          style=\"outline-primary\"\n          class=\"p-2 btn-pill whitespace-nowrap\"\n          onClick={() => {\n            this.firstExpandedBreadcrumbIndex =\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\n            this.isCollapsed = false;\n          }}\n        ></Button>\n      </li>\n    );\n  }\n\n  private renderShowLess() {\n    return (\n      <li key=\"show-less\">\n        <Button\n          ref={(ref) => (this.showLess = ref!)}\n          part=\"show-less\"\n          style=\"outline-primary\"\n          text={this.bindings.i18n.t('show-less')}\n          class=\"p-2 btn-pill\"\n          onClick={() => {\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\n            this.isCollapsed = true;\n          }}\n        ></Button>\n      </li>\n    );\n  }\n\n  private renderClearAll() {\n    const isFocusTarget =\n      this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\n    return (\n      <li key=\"clear-all\">\n        <Button\n          part=\"clear\"\n          style=\"text-primary\"\n          text={this.bindings.i18n.t('clear')}\n          class=\"p-2 btn-pill\"\n          ariaLabel={this.bindings.i18n.t('clear-all-filters')}\n          onClick={async () => {\n            this.breadcrumbManager.deselectAll();\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n          }}\n          ref={\n            isFocusTarget\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\n              : undefined\n          }\n        ></Button>\n      </li>\n    );\n  }\n\n  private get facetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.facetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .filter(({facetId}) => this.bindings.store.state.facets[facetId])\n      .map(({value, facetId, field}) => ({\n        facetId,\n        label: this.bindings.store.state.facets[facetId]?.label(),\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get categoryFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.categoryFacetBreadcrumbs.map(\n      ({facetId, field, path, deselect}) => ({\n        facetId,\n        label: this.bindings.store.state.categoryFacets[facetId].label(),\n        deselect: deselect,\n        formattedValue: path.map((pathValue) =>\n          getFieldValueCaption(field, pathValue.value, this.bindings.i18n)\n        ),\n      })\n    );\n  }\n\n  private get numericFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.numericFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.numericFacets[facetId].label(),\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.numericFacets[facetId].format(value.value),\n        ],\n        content: this.bindings.store.state.numericFacets[facetId].content?.(\n          value.value\n        ),\n      }));\n  }\n\n  private get dateFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.dateFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.dateFacets[facetId].label(),\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.dateFacets[facetId].format(value.value),\n        ],\n      }));\n  }\n\n  private get automaticFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.automaticFacetBreadcrumbs\n      .flatMap(({facetId, field, label, values}) =>\n        values.map((value) => ({value, facetId, field, label}))\n      )\n      .map(({value, facetId, field, label}) => ({\n        facetId,\n        label: label ? label : field,\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get allBreadcrumbs(): Breadcrumb[] {\n    return [\n      ...this.facetBreadcrumbs,\n      ...this.categoryFacetBreadcrumbs,\n      ...this.numericFacetBreadcrumbs,\n      ...this.dateFacetBreadcrumbs,\n      ...this.automaticFacetBreadcrumbs,\n    ];\n  }\n\n  private renderBreadcrumbs(allBreadcrumbs: Breadcrumb[]) {\n    const sortedBreadcrumbs = allBreadcrumbs.sort((a, b) => {\n      const indexA = this.facetManagerState.facetIds.indexOf(a.facetId);\n      const indexB = this.facetManagerState.facetIds.indexOf(b.facetId);\n      return indexA - indexB;\n    });\n    this.numberOfBreadcrumbs = sortedBreadcrumbs.length;\n\n    return [\n      sortedBreadcrumbs.map((breadcrumb, i) =>\n        this.renderBreadcrumb(breadcrumb, i, allBreadcrumbs.length)\n      ),\n      this.isCollapsed && this.renderShowMore(),\n      !this.isCollapsed && this.renderShowLess(),\n      this.renderClearAll(),\n    ];\n  }\n\n  public render() {\n    const allBreadcrumbs = this.allBreadcrumbs;\n\n    if (!allBreadcrumbs.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <div part=\"container\" class=\"text-on-background text-sm flex\">\n        <span part=\"label\" class=\"font-bold py-[0.625rem] pl-0 pr-2\">\n          {this.bindings.i18n.t('with-colon', {\n            text: this.bindings.i18n.t('filters'),\n          })}\n        </span>\n        <div part=\"breadcrumb-list-container\" class=\"relative grow\">\n          <ul\n            part=\"breadcrumb-list\"\n            class={`flex gap-1 ${\n              this.isCollapsed ? 'flex-nowrap absolute w-full' : 'flex-wrap'\n            }`}\n          >\n            {this.renderBreadcrumbs(allBreadcrumbs)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  public componentDidRender() {\n    this.adaptBreadcrumbs();\n  }\n}\n"],"mappings":"wbAAA,MAAMA,EAAoB,qmhC,2WC8B1B,MAAMC,EAAY,MAClB,MAAMC,EAAW,M,MAsBJC,EAAc,M,yBAMjBC,KAAAC,2BAA6B,EAC7BD,KAAAE,oBAAsB,EACtBF,KAAAG,6BAA+B,EAatBH,KAAAI,YAAc,KAsBhBJ,KAAAK,UAAY,E,6GAtBI,K,eAsBJ,C,CAEpB,UAAAC,GACLN,KAAKO,gBACLP,KAAKQ,kBAAoBC,EAAuBT,KAAKU,SAASC,QAC9DX,KAAKY,aAAeC,EAAkBb,KAAKU,SAASC,QAEpD,GAAIG,OAAOC,eAAgB,CACzBf,KAAKgB,eAAiB,IAAID,gBAAe,IAAMf,KAAKiB,qBACpDjB,KAAKgB,eAAeE,QAAQlB,KAAKmB,KAAKC,c,EAIlC,aAAAb,GACN,IAAIc,EAAO,CACThB,UAAW,IAAIiB,EAAY,CACzBC,QAAS,EACTC,IAAK,EACLC,SAAU,UAEXC,SAAS,CACVrB,UAAWL,KAAKK,W,CAIb,oBAAAsB,G,OACLC,EAAA5B,KAAKgB,kBAAc,MAAAY,SAAA,SAAAA,EAAEC,Y,CAGvB,gBAAYC,GACV,IAAK9B,KAAK+B,uBAAwB,CAChC/B,KAAK+B,uBAAyB,IAAIC,EAAsBhC,K,CAE1D,IAAKA,KAAKiC,wBAAyB,CACjCjC,KAAKiC,wBAA0B,IAAID,EAAsBhC,K,CAE3D,IAAKA,KAAKkC,wBAAyB,CACjClC,KAAKkC,wBAA0B,IAAIF,EAAsBhC,K,CAE3D,MAAO,CACL+B,uBAAwB/B,KAAK+B,uBAC7BE,wBAAyBjC,KAAKiC,wBAC9BC,wBAAyBlC,KAAKkC,wB,CAIlC,eAAYC,GACV,OAAOC,MAAMC,KACXrC,KAAKmB,KAAKmB,WAAYC,iBAAiB,iB,CAInC,IAAAC,CAAKC,GACXA,EAAQC,MAAMC,QAAU,M,CAGlB,IAAAC,CAAKH,GACXA,EAAQC,MAAMC,QAAU,E,CAGlB,kBAAAE,GACN7C,KAAKmC,YAAYW,SAASC,GAAe/C,KAAK4C,KAAKG,I,CAG7C,0BAAAC,GACN,IAAIC,EAAoB,EACxB,IACE,IAAIC,EAAIlD,KAAKmC,YAAYgB,OAAS,EAClCnD,KAAKoD,eAAiBF,GAAK,EAC3BA,IACA,CACAlD,KAAKwC,KAAKxC,KAAKmC,YAAYe,IAC3BD,G,CAEFjD,KAAKqD,oBAAoBJ,E,CAGnB,qBAAAK,GACNtD,KAAK4C,KAAK5C,KAAKuD,UACf,GAAIvD,KAAKuD,SAASC,YAAc,EAAG,CACjCxD,KAAKwC,KAAKxC,KAAKuD,S,EAIX,gBAAAtC,GACN,IAAKjB,KAAKmC,YAAYgB,OAAQ,CAC5B,M,CAEFnD,KAAK6C,qBAEL,IAAK7C,KAAKI,YAAa,CACrBJ,KAAKsD,wBACL,M,CAGFtD,KAAKqD,oBAAoBrD,KAAKmC,YAAYgB,QAC1CnD,KAAKgD,4B,CAGP,iBAAYI,GACV,MAAMK,EAAczD,KAAKmB,KAAKmB,WAAYoB,cAAc,MACxD,IAAKD,EAAa,CAChB,OAAO,K,CAET,OAAOA,EAAYE,YAAcF,EAAYG,W,CAGvC,SAAAC,CAAUC,GAChB,GAAIA,EAAKX,QAAUnD,KAAKK,UAAW,CACjC,OAAOyD,EAAKC,KAAKlE,E,CAGnB,GAAIG,KAAKK,YAAc,GAAKyD,EAAKX,OAAS,EAAG,CAC3C,MAAO,CAACrD,EAAUgE,EAAKA,EAAKX,OAAS,IAAIY,KAAKlE,E,CAGhD,MAAMmE,EAAe,CACnBF,EAAK,GACLhE,KACGgE,EAAKG,QAAQjE,KAAKK,UAAY,KAEnC,OAAO2D,EAAaD,KAAKlE,E,CAGnB,gBAAAqE,CACNnB,EACAoB,EACAC,G,MAEA,MAAMC,EAAYjC,MAAMkC,QAAQvB,EAAWwB,gBACvCxB,EAAWwB,eAAeR,KAAKlE,GAC/BkD,EAAWwB,eACf,MAAMC,EAAQpC,MAAMkC,QAAQvB,EAAWwB,gBACnCvE,KAAK6D,UAAUd,EAAWwB,gBAC1BxB,EAAWwB,eACf,MAAME,EAAQ,GAAG1B,EAAW2B,UAAUL,IACtC,MAAMM,EAAmBP,IAAqB,EAE9C,OACEQ,EAAA,MAAIC,MAAM,aAAaC,IAAKN,GAC1BI,EAACG,EAAM,CACLC,KAAK,oBACLtC,MAAM,qBACNmC,MAAM,6CACNJ,MAAOA,EACPQ,UAAWjF,KAAKU,SAASwE,KAAKC,EAAE,mBAAoB,CAClDX,MAAOC,IAETW,QAAS,K,MACP,GAAIT,EAAkB,EACpB/C,EAAA5B,KAAKU,SAAS2E,MAAMC,MAAMC,cAAU,MAAA3D,SAAA,SAAAA,EAAE4D,mC,MACjC,GAAIxF,KAAKE,oBAAsB,EAAG,CACvCF,KAAK8B,aAAaC,uBAAuB0D,kB,CAG3CzF,KAAKC,2BAA6BkE,EAClCpB,EAAW2C,UAAU,EAEvBC,IAAMA,IACJ,GAAI3F,KAAKC,6BAA+BkE,EAAO,CAC7CnE,KAAK8B,aAAaC,uBAAuB6D,UAAUD,E,CAErD,GAAI3F,KAAK6F,+BAAiC1B,EAAO,CAC/CnE,KAAK8B,aAAaI,wBAAwB0D,UAAUD,E,IAIxDf,EAAA,QACEI,KAAK,mBACLH,MAAM,6GAEL7E,KAAKU,SAASwE,KAAKC,EAAE,aAAc,CAACW,KAAM/C,EAAW2B,SAExDE,EAAA,QACEI,KAAK,mBACLH,MAAO9B,EAAWgD,QAAU,GAAK,2BAEhCnE,EAAAmB,EAAWgD,WAAO,MAAAnE,SAAA,EAAAA,EAAI4C,GAEzBI,EAAA,eACEI,KAAK,mBACLH,MAAM,yBACNmB,KAAMC,K,CAOR,mBAAA5C,CAAoBmB,GAC1BxE,KAAKG,6BAA+BqE,EACpC,GAAIA,IAAU,EAAG,CACfxE,KAAKwC,KAAKxC,KAAKkG,UACf,M,CAGFlG,KAAK4C,KAAK5C,KAAKkG,UACflG,KAAKkG,SAASC,YAAc,KAAK3B,EAAM4B,eACrCpG,KAAKU,SAASwE,KAAKmB,YAGrBrG,KAAKkG,SAASI,aACZ,aACAtG,KAAKU,SAASwE,KAAKC,EAAE,sBAAuB,CAC1CX,U,CAKE,cAAA+B,GACN,OACE3B,EAAA,MAAIE,IAAI,aACNF,EAACG,EAAM,CACLY,IAAMA,IACJ3F,KAAK8B,aAAaG,wBAAwB2D,UAAUD,GACpD3F,KAAKkG,SAAWP,CAAI,EAEtBX,KAAK,YACLtC,MAAM,kBACNmC,MAAM,iCACNO,QAAS,KACPpF,KAAK6F,6BACH7F,KAAKE,oBAAsBF,KAAKG,6BAClCH,KAAK8B,aAAaI,wBAAwBsE,oBAC1CxG,KAAKI,YAAc,KAAK,I,CAO1B,cAAAqG,GACN,OACE7B,EAAA,MAAIE,IAAI,aACNF,EAACG,EAAM,CACLY,IAAMA,GAAS3F,KAAKuD,SAAWoC,EAC/BX,KAAK,YACLtC,MAAM,kBACNoD,KAAM9F,KAAKU,SAASwE,KAAKC,EAAE,aAC3BN,MAAM,eACNO,QAAS,KACPpF,KAAK8B,aAAaG,wBAAwBuE,oBAC1CxG,KAAKI,YAAc,IAAI,I,CAOzB,cAAAsG,GACN,MAAMC,EACJ3G,KAAKC,6BAA+BD,KAAKE,oBAC3C,OACE0E,EAAA,MAAIE,IAAI,aACNF,EAACG,EAAM,CACLC,KAAK,QACLtC,MAAM,eACNoD,KAAM9F,KAAKU,SAASwE,KAAKC,EAAE,SAC3BN,MAAM,eACNI,UAAWjF,KAAKU,SAASwE,KAAKC,EAAE,qBAChCC,QAASwB,U,MACP5G,KAAKQ,kBAAkBqG,eACvBjF,EAAA5B,KAAKU,SAAS2E,MAAMC,MAAMC,cAAU,MAAA3D,SAAA,SAAAA,EAAE4D,mCAAmC,EAE3EG,IACEgB,EACI3G,KAAK8B,aAAaC,uBAAuB6D,UACzCkB,Y,CAOd,oBAAYC,GACV,OAAO/G,KAAKgH,uBAAuBD,iBAChCE,KAAI,EAAEC,UAASC,QAAOC,YACrBA,EAAOH,KAAKzC,IAAK,CAAOA,QAAO0C,UAASC,cAEzCE,OACAC,QAAO,EAAEJ,aAAalH,KAAKU,SAAS2E,MAAMC,MAAMiC,OAAOL,KACvDD,KAAI,EAAEzC,QAAO0C,UAASC,Y,MAAW,OAChCD,UACAxC,OAAO9C,EAAA5B,KAAKU,SAAS2E,MAAMC,MAAMiC,OAAOL,MAAQ,MAAAtF,SAAA,SAAAA,EAAE8C,QAClDgB,SAAUlB,EAAMkB,SAChBnB,eAAgB,CACdiD,EAAqBL,EAAO3C,EAAMA,MAAMA,MAAOxE,KAAKU,SAASwE,OAEhE,G,CAGL,4BAAYuC,GACV,OAAOzH,KAAKgH,uBAAuBS,yBAAyBR,KAC1D,EAAEC,UAASC,QAAOrD,OAAM4B,eAAS,CAC/BwB,UACAxC,MAAO1E,KAAKU,SAAS2E,MAAMC,MAAMoC,eAAeR,GAASxC,QACzDgB,SAAUA,EACVnB,eAAgBT,EAAKmD,KAAKU,GACxBH,EAAqBL,EAAOQ,EAAUnD,MAAOxE,KAAKU,SAASwE,W,CAMnE,2BAAY0C,GACV,OAAO5H,KAAKgH,uBAAuBY,wBAChCX,KAAI,EAAEC,UAASC,QAAOC,YACrBA,EAAOH,KAAKzC,IAAK,CAAOA,QAAO0C,UAASC,cAEzCE,OACAJ,KAAI,EAAEzC,QAAO0C,c,QAAa,OACzBA,UACAxC,MAAO1E,KAAKU,SAAS2E,MAAMC,MAAMuC,cAAcX,GAASxC,QACxDgB,SAAUlB,EAAMkB,SAChBnB,eAAgB,CACdvE,KAAKU,SAAS2E,MAAMC,MAAMuC,cAAcX,GAASY,OAAOtD,EAAMA,QAEhEuB,SAASgC,GAAAnG,EAAA5B,KAAKU,SAAS2E,MAAMC,MAAMuC,cAAcX,IAASnB,WAAO,MAAAgC,SAAA,SAAAA,EAAAC,KAAApG,EAC/D4C,EAAMA,OAET,G,CAGL,wBAAYyD,GACV,OAAOjI,KAAKgH,uBAAuBiB,qBAChChB,KAAI,EAAEC,UAASC,QAAOC,YACrBA,EAAOH,KAAKzC,IAAK,CAAOA,QAAO0C,UAASC,cAEzCE,OACAJ,KAAI,EAAEzC,QAAO0C,cAAQ,CACpBA,UACAxC,MAAO1E,KAAKU,SAAS2E,MAAMC,MAAM4C,WAAWhB,GAASxC,QACrDgB,SAAUlB,EAAMkB,SAChBnB,eAAgB,CACdvE,KAAKU,SAAS2E,MAAMC,MAAM4C,WAAWhB,GAASY,OAAOtD,EAAMA,W,CAKnE,6BAAY2D,GACV,OAAOnI,KAAKgH,uBAAuBmB,0BAChCC,SAAQ,EAAElB,UAASC,QAAOzC,QAAO0C,YAChCA,EAAOH,KAAKzC,IAAK,CAAOA,QAAO0C,UAASC,QAAOzC,cAEhDuC,KAAI,EAAEzC,QAAO0C,UAASC,QAAOzC,YAAM,CAClCwC,UACAxC,MAAOA,EAAQA,EAAQyC,EACvBzB,SAAUlB,EAAMkB,SAChBnB,eAAgB,CACdiD,EAAqBL,EAAO3C,EAAMA,MAAMA,MAAOxE,KAAKU,SAASwE,U,CAKrE,kBAAYmD,GACV,MAAO,IACFrI,KAAK+G,oBACL/G,KAAKyH,4BACLzH,KAAK4H,2BACL5H,KAAKiI,wBACLjI,KAAKmI,0B,CAIJ,iBAAAG,CAAkBD,GACxB,MAAME,EAAoBF,EAAeG,MAAK,CAACC,EAAGC,KAChD,MAAMC,EAAS3I,KAAK4I,kBAAkBC,SAASC,QAAQL,EAAEvB,SACzD,MAAM6B,EAAS/I,KAAK4I,kBAAkBC,SAASC,QAAQJ,EAAExB,SACzD,OAAOyB,EAASI,CAAM,IAExB/I,KAAKE,oBAAsBqI,EAAkBpF,OAE7C,MAAO,CACLoF,EAAkBtB,KAAI,CAAClE,EAAYG,IACjClD,KAAKkE,iBAAiBnB,EAAYG,EAAGmF,EAAelF,UAEtDnD,KAAKI,aAAeJ,KAAKuG,kBACxBvG,KAAKI,aAAeJ,KAAKyG,iBAC1BzG,KAAK0G,iB,CAIF,MAAAsC,GACL,MAAMX,EAAiBrI,KAAKqI,eAE5B,IAAKA,EAAelF,OAAQ,CAC1B,OAAOyB,EAACqE,EAAM,K,CAGhB,OACErE,EAAA,OAAKI,KAAK,YAAYH,MAAM,mCAC1BD,EAAA,QAAMI,KAAK,QAAQH,MAAM,qCACtB7E,KAAKU,SAASwE,KAAKC,EAAE,aAAc,CAClCW,KAAM9F,KAAKU,SAASwE,KAAKC,EAAE,cAG/BP,EAAA,OAAKI,KAAK,4BAA4BH,MAAM,iBAC1CD,EAAA,MACEI,KAAK,kBACLH,MAAO,cACL7E,KAAKI,YAAc,8BAAgC,eAGpDJ,KAAKsI,kBAAkBD,K,CAO3B,kBAAAa,GACLlJ,KAAKiB,kB,6BArcsBkI,EAAA,CAA5BC,K,+BAeOD,EAAA,CAFPE,EAAsB,sB,6CAKhBF,EAAA,CAFNE,EAAsB,iB"}