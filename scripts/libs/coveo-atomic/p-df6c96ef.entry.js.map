{"version":3,"names":["Switch","props","attributes","onClick","_a","onToggle","call","checked","ariaLabel","String","part","tabIndex","title","containerClasses","join","handleClasses","h","role","class","CopyButton","Button","style","isCopied","icon","CopyIcon","FeedbackButton","getIcon","variant","ThumbsUpIcon","ThumbsDownIcon","active","ariaPressed","GeneratedContentContainer","children","isStreaming","answer","options","value","StepsIcon","titleKey","tooltipKey","BulletsIcon","BubbleIcon","RephraseButtons","i18n","t","map","option","isActive","answerStyle","onChange","RetryPrompt","message","buttonLabel","SourceCitations","isVisible","label","TypingLoader","atomicGeneratedAnswerCss","AtomicGeneratedAnswer","this","hidden","copied","storage","SafeStorage","onGeneratedAnswerStateUpdate","generatedAnswerState","data","writeStoredData","initialize","readStoredData","generatedAnswer","buildGeneratedAnswer","bindings","engine","initialState","responseFormat","searchStatus","buildSearchStatus","getParsedJSON","StorageItems","GENERATED_ANSWER_DATA","setJSON","hasRetryableError","searchStatusState","hasError","error","isRetryable","shouldBeHidden","isLoading","citations","undefined","length","isAnswerVisible","toggleTooltip","key","loadingClasses","contentClasses","copyToClipboard","navigator","clipboard","writeText","setTimeout","renderCitations","citation","index","interactiveCitation","buildInteractiveCitation","id","sendHoverEndEvent","citationHoverTimeMs","logCitationHover","renderContent","Heading","level","liked","like","disliked","dislike","logCopyToClipboard","show","hide","retry","rephrase","render","__decorate","InitializeBindings","BindStateToController","onUpdateCallbackMethod"],"sources":["src/components/common/switch.tsx","src/components/search/generatedAnswer/atomic-generated-answer/copy-button.tsx","src/components/search/generatedAnswer/atomic-generated-answer/feedback-button.tsx","src/components/search/generatedAnswer/atomic-generated-answer/generated-content-container.tsx","src/components/search/generatedAnswer/atomic-generated-answer/rephrase-buttons.tsx","src/components/search/generatedAnswer/atomic-generated-answer/retry-prompt.tsx","src/components/search/generatedAnswer/atomic-generated-answer/source-citations.tsx","src/components/search/generatedAnswer/atomic-generated-answer/typing-loader.tsx","src/components/search/generatedAnswer/atomic-generated-answer/atomic-generated-answer.pcss?tag=atomic-generated-answer&encapsulation=shadow","src/components/search/generatedAnswer/atomic-generated-answer/atomic-generated-answer.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\n\nexport interface SwitchProps {\n  checked?: boolean;\n  onToggle?(checked: boolean): void;\n  ariaLabel?: string;\n  part?: string;\n  tabIndex?: number;\n  title?: string;\n}\n\nexport const Switch: FunctionalComponent<SwitchProps> = (props) => {\n  const attributes = {\n    onClick: () => props.onToggle?.(!props.checked),\n    'arial-label': props.ariaLabel,\n    'aria-checked': String(!!props.checked),\n    part: props.part,\n    tabIndex: props.tabIndex,\n    title: props.title,\n  };\n\n  const containerClasses = [\n    'w-12',\n    'h-6',\n    'p-1',\n    'rounded-full',\n    props.checked ? 'bg-primary' : 'bg-neutral',\n  ].join(' ');\n\n  const handleClasses = [\n    'w-4',\n    'h-4',\n    'rounded-full',\n    'bg-white',\n    props.checked ? 'ml-6' : '',\n  ].join(' ');\n\n  return (\n    <button\n      role=\"switch\"\n      {...attributes}\n      class=\"rounded-full btn-outline-neutral\"\n    >\n      <div class={containerClasses}>\n        <div class={handleClasses}></div>\n      </div>\n    </button>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport CopyIcon from '../../../../images/copy.svg';\nimport {Button} from '../../../common/button';\n\ninterface CopyButtonProps {\n  title: string;\n  isCopied: boolean;\n  onClick: () => void;\n}\n\nexport const CopyButton: FunctionalComponent<CopyButtonProps> = (props) => {\n  return (\n    <Button\n      title={props.title}\n      part=\"copy-button\"\n      style={'text-transparent'}\n      class={`p-2 rounded-md ${props.isCopied ? 'copied' : ''}`}\n      onClick={props.onClick}\n    >\n      <div class=\"icon-container text-neutral-dark\">\n        <atomic-icon class=\"w-5\" icon={CopyIcon}></atomic-icon>\n      </div>\n    </Button>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport ThumbsDownIcon from '../../../../images/thumbs-down.svg';\nimport ThumbsUpIcon from '../../../../images/thumbs-up.svg';\nimport {Button} from '../../../common/button';\n\ntype FeedbackVariant = 'like' | 'dislike';\n\ninterface FeedbackButtonProps {\n  title: string;\n  variant: FeedbackVariant;\n  active: boolean;\n  onClick: () => void;\n}\n\nexport const FeedbackButton: FunctionalComponent<FeedbackButtonProps> = (\n  props\n) => {\n  const getIcon = () => {\n    return props.variant === 'like' ? ThumbsUpIcon : ThumbsDownIcon;\n  };\n\n  return (\n    <Button\n      title={props.title}\n      style=\"text-transparent\"\n      part=\"feedback-button\"\n      class={`feedback-button p-2 rounded-md ${props.variant} ${\n        props.active ? 'active' : ''\n      }`}\n      onClick={props.onClick}\n      ariaPressed={`${props.active}`}\n    >\n      <atomic-icon class=\"w-5\" icon={getIcon()}></atomic-icon>\n    </Button>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\n\ninterface GeneratedContentContainerProps {\n  answer?: string;\n  isStreaming: boolean;\n}\n\nexport const GeneratedContentContainer: FunctionalComponent<\n  GeneratedContentContainerProps\n> = (props, children) => (\n  <div class=\"mt-6\">\n    <p\n      part=\"generated-text\"\n      class={`mb-0 text-on-background whitespace-pre-wrap ${\n        props.isStreaming ? 'cursor' : ''\n      }`}\n    >\n      {props.answer}\n    </p>\n    <div class=\"footer mt-6\">{children}</div>\n  </div>\n);\n","import {GeneratedAnswerStyle} from '@coveo/headless';\nimport {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport BubbleIcon from '../../../../images/bubble.svg';\nimport BulletsIcon from '../../../../images/bullets.svg';\nimport StepsIcon from '../../../../images/steps.svg';\nimport {Button} from '../../../common/button';\n\ninterface RephraseOption {\n  value: GeneratedAnswerStyle;\n  icon: string;\n  titleKey: string;\n  tooltipKey: string;\n}\n\nconst options: RephraseOption[] = [\n  {\n    value: 'step',\n    icon: StepsIcon,\n    titleKey: 'steps',\n    tooltipKey: 'steps-tooltip',\n  },\n  {\n    value: 'bullet',\n    icon: BulletsIcon,\n    titleKey: 'bullets',\n    tooltipKey: 'bullets-tooltip',\n  },\n  {\n    titleKey: 'summary',\n    value: 'concise',\n    icon: BubbleIcon,\n    tooltipKey: 'summary',\n  },\n];\n\ninterface RephraseButtonProps {\n  answerStyle: string;\n  i18n: i18n;\n  onChange: (answerStyle: GeneratedAnswerStyle) => void;\n}\n\nexport const RephraseButtons: FunctionalComponent<RephraseButtonProps> = (\n  props\n) => {\n  const {i18n} = props;\n  return (\n    <div class=\"rephrase-buttons shrink-0\">\n      <p part=\"rephrase-label\" class=\"mb-2 text-neutral-dark shrink-0\">\n        {i18n.t('rephrase')}\n      </p>\n      <div class=\"flex flex-wrap gap-2 ml-auto\">\n        {options.map((option) => {\n          const isActive = props.answerStyle === option.value;\n          return (\n            <Button\n              title={i18n.t(option.tooltipKey)}\n              part=\"rephrase-button\"\n              style=\"outline-primary\"\n              class={`flex items-center rounded-md ${isActive ? 'active' : ''}`}\n              onClick={() => {\n                props.onChange(isActive ? 'default' : option.value);\n              }}\n              ariaPressed={String(isActive)}\n            >\n              <div class=\"icon-container text-neutral-dark h-full mx-auto shrink-0 relative\">\n                <atomic-icon icon={option.icon}></atomic-icon>\n              </div>\n              <div class=\"rephrase-btn-label hidden text-neutral-dark\">\n                {i18n.t(option.titleKey)}\n              </div>\n            </Button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {Button} from '../../../common/button';\n\ninterface RetryPromptProps {\n  message: string;\n  buttonLabel: string;\n  onClick: () => void;\n}\n\nexport const RetryPrompt: FunctionalComponent<RetryPromptProps> = (props) => (\n  <div part=\"retry-container\" class=\"mt-4\">\n    <div class=\"mx-auto text-center text-neutral-dark\">{props.message}</div>\n    <Button\n      class=\"block px-4 py-2 mt-4 mx-auto\"\n      style=\"outline-primary\"\n      onClick={props.onClick}\n    >\n      {props.buttonLabel}\n    </Button>\n  </div>\n);\n","import {FunctionalComponent, h} from '@stencil/core';\n\ninterface SourceCitationsProps {\n  label: string;\n  isVisible: boolean;\n}\n\nexport const SourceCitations: FunctionalComponent<SourceCitationsProps> = (\n  props,\n  children\n) =>\n  props.isVisible ? (\n    <div class=\"source-citations\">\n      <p part=\"citations-label\" class=\"mb-2 text-neutral-dark shrink-0\">\n        {props.label}\n      </p>\n      <ol class=\"list-none citations-container gap-2 flex items-center flex-wrap\">\n        {children}\n      </ol>\n    </div>\n  ) : null;\n","import {FunctionalComponent, h} from '@stencil/core';\n\nexport const TypingLoader: FunctionalComponent = () => (\n  <div class=\"typing-indicator\" aria-hidden=\"true\">\n    <span></span>\n    <span></span>\n    <span></span>\n  </div>\n);\n","@import '../../../../global/global.pcss';\n@import '../../../../global/mixins.pcss';\n@import './styles/generated-text.pcss';\n@import './styles/feedback-buttons.pcss';\n@import './styles/rephrase-buttons.pcss';\n@import './styles/typing-indicator.pcss';\n@import './styles/copy-button.pcss';\n\n@keyframes cursor-blink {\n  0% {\n    opacity: 0;\n  }\n}\n\n.footer {\n  @apply flex;\n\n  .source-citations {\n    @apply mr-2;\n  }\n  .rephrase-buttons {\n    @apply ml-auto;\n  }\n\n  @screen mobile-only {\n    @apply flex-col gap-4;\n\n    .rephrase-buttons {\n      @apply ml-0;\n    }\n  }\n}\n","import {\n  SearchStatus,\n  SearchStatusState,\n  buildSearchStatus,\n  buildGeneratedAnswer,\n  GeneratedAnswer,\n  GeneratedAnswerState,\n  GeneratedAnswerCitation,\n  GeneratedAnswerStyle,\n  buildInteractiveCitation,\n} from '@coveo/headless';\nimport {Component, h, State, Prop} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {\n  GeneratedAnswerData,\n  SafeStorage,\n  StorageItems,\n} from '../../../../utils/local-storage-utils';\nimport {Heading} from '../../../common/heading';\nimport {Switch} from '../../../common/switch';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\nimport {CopyButton} from './copy-button';\nimport {FeedbackButton} from './feedback-button';\nimport {GeneratedContentContainer} from './generated-content-container';\nimport {RephraseButtons} from './rephrase-buttons';\nimport {RetryPrompt} from './retry-prompt';\nimport {SourceCitations} from './source-citations';\nimport {TypingLoader} from './typing-loader';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-generated-answer',\n  styleUrl: 'atomic-generated-answer.pcss',\n  shadow: true,\n})\nexport class AtomicGeneratedAnswer implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public generatedAnswer!: GeneratedAnswer;\n  public searchStatus!: SearchStatus;\n\n  @BindStateToController('generatedAnswer', {\n    onUpdateCallbackMethod: 'onGeneratedAnswerStateUpdate',\n  })\n  @State()\n  private generatedAnswerState!: GeneratedAnswerState;\n\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n\n  @State()\n  public error!: Error;\n\n  @State()\n  hidden = true;\n\n  @State()\n  copied = false;\n\n  /**\n   * The answer style to apply when the component first loads.\n   * Options:\n   *   - `default`: Generates the answer without additional formatting instructions.\n   *   - `bullet`: Requests the answer to be generated in bullet-points.\n   *   - `step`: Requests the answer to be generated in step-by-step instructions.\n   *   - `concise`: Requests the answer to be generated as concisely as possible.\n   */\n  @Prop() answerStyle: GeneratedAnswerStyle = 'default';\n\n  private storage: SafeStorage = new SafeStorage();\n  private data?: GeneratedAnswerData;\n\n  public initialize() {\n    this.data = this.readStoredData();\n    this.generatedAnswer = buildGeneratedAnswer(this.bindings.engine, {\n      initialState: {\n        isVisible: this.data.isVisible,\n        responseFormat: {\n          answerStyle: this.answerStyle,\n        },\n      },\n    });\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n  }\n\n  // @ts-expect-error: This function is used by BindStateToController.\n  private onGeneratedAnswerStateUpdate = () => {\n    if (this.generatedAnswerState.isVisible !== this.data?.isVisible) {\n      this.data = {\n        ...this.data,\n        isVisible: this.generatedAnswerState.isVisible,\n      };\n      this.writeStoredData(this.data);\n    }\n  };\n\n  private readStoredData(): GeneratedAnswerData {\n    return this.storage.getParsedJSON<GeneratedAnswerData>(\n      StorageItems.GENERATED_ANSWER_DATA,\n      {isVisible: true}\n    );\n  }\n\n  private writeStoredData(data: GeneratedAnswerData) {\n    this.storage.setJSON(StorageItems.GENERATED_ANSWER_DATA, data);\n  }\n\n  private get hasRetryableError() {\n    return (\n      !this.searchStatusState.hasError &&\n      this.generatedAnswerState.error?.isRetryable\n    );\n  }\n\n  private get shouldBeHidden() {\n    const {isLoading, answer, citations} = this.generatedAnswerState;\n    return (\n      !(isLoading || answer !== undefined || citations.length) &&\n      !this.hasRetryableError\n    );\n  }\n\n  private get isAnswerVisible() {\n    return this.generatedAnswerState.isVisible;\n  }\n\n  private get toggleTooltip() {\n    const key = this.isAnswerVisible\n      ? 'generated-answer-toggle-on'\n      : 'generated-answer-toggle-off';\n    return this.bindings.i18n.t(key);\n  }\n\n  private get loadingClasses() {\n    return 'my-3';\n  }\n\n  private get contentClasses() {\n    return 'mt-0 mb-4 border border-neutral shadow-lg p-6 bg-background rounded-lg p-6 text-on-background';\n  }\n\n  private async copyToClipboard(answer: string) {\n    await navigator.clipboard.writeText(answer);\n    this.copied = true;\n    setTimeout(() => {\n      this.copied = false;\n    }, 2000);\n  }\n\n  private renderCitations() {\n    return this.generatedAnswerState.citations.map(\n      (citation: GeneratedAnswerCitation, index: number) => {\n        const interactiveCitation = buildInteractiveCitation(\n          this.bindings.engine,\n          {\n            options: {\n              citation,\n            },\n          }\n        );\n        return (\n          <li key={citation.id} class=\"max-w-full\">\n            <atomic-citation\n              citation={citation}\n              index={index}\n              sendHoverEndEvent={(citationHoverTimeMs: number) => {\n                this.generatedAnswer.logCitationHover(\n                  citation.id,\n                  citationHoverTimeMs\n                );\n              }}\n              interactiveCitation={interactiveCitation}\n            />\n          </li>\n        );\n      }\n    );\n  }\n\n  private renderContent() {\n    return (\n      <div part=\"generated-content\">\n        <div class=\"flex items-center\">\n          <Heading\n            level={0}\n            part=\"header-label\"\n            class=\"text-bg-primary font-medium inline-block rounded-md py-2 px-2.5\"\n          >\n            {this.bindings.i18n.t('generated-answer-title')}\n          </Heading>\n\n          <div class=\"flex gap-2 h-9 items-center ml-auto\">\n            {!this.hasRetryableError &&\n              !this.generatedAnswerState.isStreaming &&\n              this.isAnswerVisible && (\n                <div class=\"feedback-buttons flex shrink-0 gap-2 ml-auto\">\n                  <FeedbackButton\n                    title={this.bindings.i18n.t('this-answer-was-helpful')}\n                    variant=\"like\"\n                    active={this.generatedAnswerState.liked}\n                    onClick={this.generatedAnswer.like}\n                  />\n                  <FeedbackButton\n                    title={this.bindings.i18n.t('this-answer-was-not-helpful')}\n                    variant=\"dislike\"\n                    active={this.generatedAnswerState.disliked}\n                    onClick={this.generatedAnswer.dislike}\n                  />\n                  <CopyButton\n                    title={\n                      !this.copied\n                        ? this.bindings.i18n.t('copy-generated-answer')\n                        : this.bindings.i18n.t('generated-answer-copied')\n                    }\n                    isCopied={this.copied}\n                    onClick={() => {\n                      this.copyToClipboard(this.generatedAnswerState.answer!);\n                      this.generatedAnswer.logCopyToClipboard();\n                    }}\n                  />\n                </div>\n              )}\n\n            <Switch\n              part=\"toggle\"\n              checked={this.isAnswerVisible}\n              onToggle={(checked) => {\n                checked\n                  ? this.generatedAnswer.show()\n                  : this.generatedAnswer.hide();\n              }}\n              ariaLabel={this.bindings.i18n.t('generated-answer-title')}\n              title={this.toggleTooltip}\n            ></Switch>\n          </div>\n        </div>\n        {this.hasRetryableError && this.isAnswerVisible ? (\n          <RetryPrompt\n            onClick={this.generatedAnswer.retry}\n            buttonLabel={this.bindings.i18n.t('retry')}\n            message={this.bindings.i18n.t('retry-stream-message')}\n          />\n        ) : null}\n\n        {!this.hasRetryableError && this.isAnswerVisible ? (\n          <GeneratedContentContainer\n            answer={this.generatedAnswerState.answer}\n            isStreaming={this.generatedAnswerState.isStreaming}\n          >\n            <SourceCitations\n              label={this.bindings.i18n.t('citations')}\n              isVisible={!!this.generatedAnswerState.citations.length}\n            >\n              {this.renderCitations()}\n            </SourceCitations>\n\n            {!this.generatedAnswerState.isStreaming && (\n              <RephraseButtons\n                answerStyle={\n                  this.generatedAnswerState.responseFormat.answerStyle\n                }\n                i18n={this.bindings.i18n}\n                onChange={(answerStyle: GeneratedAnswerStyle) =>\n                  this.generatedAnswer.rephrase({answerStyle})\n                }\n              />\n            )}\n          </GeneratedContentContainer>\n        ) : null}\n      </div>\n    );\n  }\n\n  public render() {\n    const {isLoading} = this.generatedAnswerState;\n    if (this.shouldBeHidden) {\n      return null;\n    }\n    return (\n      <aside\n        class={`mx-auto ${\n          isLoading ? this.loadingClasses : this.contentClasses\n        }`}\n        part=\"container\"\n      >\n        <article>{isLoading ? <TypingLoader /> : this.renderContent()}</article>\n      </aside>\n    );\n  }\n}\n"],"mappings":"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"}