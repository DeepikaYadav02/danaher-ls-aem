{"version":3,"names":["atomicSortDropdownCss","AtomicSortDropdown","this","id","randomID","initialize","buildOptions","searchStatus","buildSearchStatus","bindings","engine","sort","buildSort","initialState","criterion","_a","store","state","sortOptions","criteria","sortExpressionElements","Array","from","host","querySelectorAll","length","error","Error","set","map","expression","label","Schema","StringValue","emptyAllowed","required","validate","parseCriterionExpression","options","select","e","composedPath","option","find","value","sortBy","buildOption","h","selected","isSortedBy","i18n","t","renderLabel","class","part","htmlFor","text","renderSelect","onChange","icon","ArrowBottomIcon","render","searchStatusState","hasError","firstSearchExecuted","hasResults","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.pcss?tag=atomic-sort-dropdown&encapsulation=shadow","src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\nselect:hover + div,\nselect:focus-visible + div {\n  @apply border-primary-light text-primary-light;\n}\n","import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  Sort,\n  buildSort,\n  SortState,\n  parseCriterionExpression,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n} from '@coveo/headless';\nimport {Component, h, State, Element} from '@stencil/core';\nimport ArrowBottomIcon from '../../../images/arrow-bottom-rounded.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\nimport {SortDropdownOption} from '../atomic-search-interface/store';\n\n/**\n * The `atomic-sort-dropdown` component renders a dropdown that the end user can interact with to select the criteria to use when sorting query results.\n *\n * @part label - The \"Sort by\" label of the `<select>` element.\n * @part select-parent - The `<select>` element parent.\n * @part select - The `<select>` element of the dropdown list.\n * @part select-separator - The element separating the select from the icon.\n * @part placeholder - The dropdown placeholder for while the search interface is initializing.\n */\n@Component({\n  tag: 'atomic-sort-dropdown',\n  styleUrl: 'atomic-sort-dropdown.pcss',\n  shadow: true,\n})\nexport class AtomicSortDropdown implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private sort!: Sort;\n  public searchStatus!: SearchStatus;\n  private id = randomID('atomic-sort-dropdown-');\n\n  @Element() host!: HTMLElement;\n\n  @State() @BindStateToController('sort') public sortState!: SortState;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n\n  public initialize() {\n    this.buildOptions();\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.sort = buildSort(this.bindings.engine, {\n      initialState: {\n        criterion: this.bindings.store.state.sortOptions[0]?.criteria,\n      },\n    });\n  }\n\n  private buildOptions() {\n    const sortExpressionElements = Array.from(\n      this.host.querySelectorAll('atomic-sort-expression')\n    );\n\n    if (!sortExpressionElements.length) {\n      this.error = new Error(\n        'The \"atomic-sort-dropdown\" element requires at least one \"atomic-sort-expression\" child.'\n      );\n      return;\n    }\n\n    this.bindings.store.set(\n      'sortOptions',\n      sortExpressionElements.map(({expression, label}) => {\n        new Schema({\n          label: new StringValue({emptyAllowed: false, required: true}),\n        }).validate({label});\n\n        return {\n          criteria: parseCriterionExpression(expression),\n          expression,\n          label,\n        };\n      })\n    );\n  }\n\n  private get options() {\n    return this.bindings.store.state.sortOptions;\n  }\n\n  private select(e: Event) {\n    const select = e.composedPath()[0] as HTMLSelectElement;\n    const option = this.options.find(\n      (option) => option.expression === select.value\n    );\n    option && this.sort.sortBy(option.criteria);\n  }\n\n  private buildOption({expression, criteria, label}: SortDropdownOption) {\n    return (\n      <option value={expression} selected={this.sort.isSortedBy(criteria)}>\n        {this.bindings.i18n.t(label)}\n      </option>\n    );\n  }\n\n  private renderLabel() {\n    return (\n      <label\n        class=\"m-2 font-bold text-sm cursor-pointer\"\n        part=\"label\"\n        htmlFor={this.id}\n      >\n        {this.bindings.i18n.t('with-colon', {\n          text: this.bindings.i18n.t('sort-by'),\n        })}\n      </label>\n    );\n  }\n\n  private renderSelect() {\n    return (\n      <div class=\"relative\" part=\"select-parent\">\n        <select\n          id={this.id}\n          class=\"btn-outline-neutral h-10 flex-grow cursor-pointer appearance-none pl-3 pr-24\"\n          part=\"select\"\n          aria-label={this.bindings.i18n.t('sort-by')}\n          onChange={(option) => this.select(option)}\n        >\n          {this.options.map((option) => this.buildOption(option))}\n        </select>\n        <div\n          part=\"select-separator\"\n          class=\"w-10 absolute pointer-events-none top-px bottom-px right-0 border-l border-neutral flex justify-center items-center\"\n        >\n          <atomic-icon class=\"w-2.5\" icon={ArrowBottomIcon}></atomic-icon>\n        </div>\n      </div>\n    );\n  }\n\n  public render() {\n    if (this.searchStatusState.hasError) {\n      return;\n    }\n\n    if (!this.searchStatusState.firstSearchExecuted) {\n      return (\n        <div\n          part=\"placeholder\"\n          aria-hidden\n          class=\"rounded h-6 my-2 w-44 bg-neutral animate-pulse\"\n        ></div>\n      );\n    }\n\n    if (!this.searchStatusState.hasResults) {\n      return;\n    }\n\n    return [\n      <div class=\"flex items-center flex-wrap text-on-background\">\n        {this.renderLabel()}\n        {this.renderSelect()}\n      </div>,\n      <slot></slot>,\n    ];\n  }\n}\n"],"mappings":"6SAAA,MAAMA,EAAwB,wnhC,iXCmCjBC,EAAkB,M,yBAIrBC,KAAAC,GAAKC,EAAS,yB,+EAUf,UAAAC,G,MACLH,KAAKI,eACLJ,KAAKK,aAAeC,EAAkBN,KAAKO,SAASC,QACpDR,KAAKS,KAAOC,EAAUV,KAAKO,SAASC,OAAQ,CAC1CG,aAAc,CACZC,WAAWC,EAAAb,KAAKO,SAASO,MAAMC,MAAMC,YAAY,MAAE,MAAAH,SAAA,SAAAA,EAAEI,W,CAKnD,YAAAb,GACN,MAAMc,EAAyBC,MAAMC,KACnCpB,KAAKqB,KAAKC,iBAAiB,2BAG7B,IAAKJ,EAAuBK,OAAQ,CAClCvB,KAAKwB,MAAQ,IAAIC,MACf,4FAEF,M,CAGFzB,KAAKO,SAASO,MAAMY,IAClB,cACAR,EAAuBS,KAAI,EAAEC,aAAYC,YACvC,IAAIC,EAAO,CACTD,MAAO,IAAIE,EAAY,CAACC,aAAc,MAAOC,SAAU,SACtDC,SAAS,CAACL,UAEb,MAAO,CACLZ,SAAUkB,EAAyBP,GACnCA,aACAC,QACD,I,CAKP,WAAYO,GACV,OAAOpC,KAAKO,SAASO,MAAMC,MAAMC,W,CAG3B,MAAAqB,CAAOC,GACb,MAAMD,EAASC,EAAEC,eAAe,GAChC,MAAMC,EAASxC,KAAKoC,QAAQK,MACzBD,GAAWA,EAAOZ,aAAeS,EAAOK,QAE3CF,GAAUxC,KAAKS,KAAKkC,OAAOH,EAAOvB,S,CAG5B,WAAA2B,EAAYhB,WAACA,EAAUX,SAAEA,EAAQY,MAAEA,IACzC,OACEgB,EAAA,UAAQH,MAAOd,EAAYkB,SAAU9C,KAAKS,KAAKsC,WAAW9B,IACvDjB,KAAKO,SAASyC,KAAKC,EAAEpB,G,CAKpB,WAAAqB,GACN,OACEL,EAAA,SACEM,MAAM,uCACNC,KAAK,QACLC,QAASrD,KAAKC,IAEbD,KAAKO,SAASyC,KAAKC,EAAE,aAAc,CAClCK,KAAMtD,KAAKO,SAASyC,KAAKC,EAAE,a,CAM3B,YAAAM,GACN,OACEV,EAAA,OAAKM,MAAM,WAAWC,KAAK,iBACzBP,EAAA,UACE5C,GAAID,KAAKC,GACTkD,MAAM,+EACNC,KAAK,SAAQ,aACDpD,KAAKO,SAASyC,KAAKC,EAAE,WACjCO,SAAWhB,GAAWxC,KAAKqC,OAAOG,IAEjCxC,KAAKoC,QAAQT,KAAKa,GAAWxC,KAAK4C,YAAYJ,MAEjDK,EAAA,OACEO,KAAK,mBACLD,MAAM,uHAENN,EAAA,eAAaM,MAAM,QAAQM,KAAMC,K,CAMlC,MAAAC,GACL,GAAI3D,KAAK4D,kBAAkBC,SAAU,CACnC,M,CAGF,IAAK7D,KAAK4D,kBAAkBE,oBAAqB,CAC/C,OACEjB,EAAA,OACEO,KAAK,cAAa,mBAElBD,MAAM,kD,CAKZ,IAAKnD,KAAK4D,kBAAkBG,WAAY,CACtC,M,CAGF,MAAO,CACLlB,EAAA,OAAKM,MAAM,kDACRnD,KAAKkD,cACLlD,KAAKuD,gBAERV,EAAA,a,6BAnIyBmB,EAAA,CAA5BC,K,+BAO8CD,EAAA,CAArCE,EAAsB,S,gCAGxBF,EAAA,CAFPE,EAAsB,iB"}